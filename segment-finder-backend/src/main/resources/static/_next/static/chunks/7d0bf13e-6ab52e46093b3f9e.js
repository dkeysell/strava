"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[255],{7054:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){let previouslyLoadedUrl;__webpack_require__.d(__webpack_exports__,{Db:function(){return useLoadScript},b6:function(){return GoogleMap},jC:function(){return MarkerF}});var LoaderStatus,tmp,MarkerClustererEvents,hasRequiredReactJsxRuntime_production_min,LoaderStatus1,MarkerClustererEvents1,react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(7294),react_dom__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(3935),jsxRuntime=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==__webpack_require__.g?__webpack_require__.g:"undefined"!=typeof self&&self,{exports:{}}),reactJsxRuntime_production_min={};jsxRuntime.exports=function(){if(hasRequiredReactJsxRuntime_production_min)return reactJsxRuntime_production_min;hasRequiredReactJsxRuntime_production_min=1;var k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=react__WEBPACK_IMPORTED_MODULE_0__.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}return reactJsxRuntime_production_min.Fragment=l,reactJsxRuntime_production_min.jsx=q,reactJsxRuntime_production_min.jsxs=q,reactJsxRuntime_production_min}();var invariant_1=function(condition,format,a,b,c,d,e,f){if(!condition){var error;if(void 0===format)error=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var args=[a,b,c,d,e,f],argIndex=0;(error=Error(format.replace(/%s/g,function(){return args[argIndex++]}))).name="Invariant Violation"}throw error.framesToPop=1,error}};let MapContext=(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(null);function unregisterEvent(registered){google.maps.event.removeListener(registered)}function unregisterEvents(events=[]){events.forEach(unregisterEvent)}function applyUpdatersToPropsAndRegisterEvents({updaterMap,eventMap,prevProps,nextProps,instance}){let registeredEvents=function(props,instance,eventMap){let registeredList=Object.keys(eventMap).reduce(function(newAcc,key){var googleEventName;return googleEventName=eventMap[key],"function"==typeof props[key]&&newAcc.push(google.maps.event.addListener(instance,googleEventName,props[key])),newAcc},[]);return registeredList}(nextProps,instance,eventMap);return!function(updaterMap,prevProps,nextProps,instance){let map={},iter=(fn,key)=>{let nextValue=nextProps[key];nextValue!==prevProps[key]&&(map[key]=nextValue,fn(instance,nextValue))};!function(obj,fn){Object.keys(obj).forEach(key=>fn(obj[key],key))}(updaterMap,iter)}(updaterMap,prevProps,nextProps,instance),registeredEvents}let eventMap$i={onDblClick:"dblclick",onDragEnd:"dragend",onDragStart:"dragstart",onMapTypeIdChanged:"maptypeid_changed",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseDown:"mousedown",onMouseUp:"mouseup",onRightClick:"rightclick",onTilesLoaded:"tilesloaded",onBoundsChanged:"bounds_changed",onCenterChanged:"center_changed",onClick:"click",onDrag:"drag",onHeadingChanged:"heading_changed",onIdle:"idle",onProjectionChanged:"projection_changed",onResize:"resize",onTiltChanged:"tilt_changed",onZoomChanged:"zoom_changed"},updaterMap$i={extraMapTypes(map,extra){extra.forEach(function(it,i){map.mapTypes.set(String(i),it)})},center(map,center){map.setCenter(center)},clickableIcons(map,clickable){map.setClickableIcons(clickable)},heading(map,heading){map.setHeading(heading)},mapTypeId(map,mapTypeId){map.setMapTypeId(mapTypeId)},options(map,options){map.setOptions(options)},streetView(map,streetView){map.setStreetView(streetView)},tilt(map,tilt){map.setTilt(tilt)},zoom(map,zoom){map.setZoom(zoom)}};(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function({children,options,id,mapContainerStyle,mapContainerClassName,center,onClick,onDblClick,onDrag,onDragEnd,onDragStart,onMouseMove,onMouseOut,onMouseOver,onMouseDown,onMouseUp,onRightClick,onCenterChanged,onLoad,onUnmount}){let[map,setMap]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),ref=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null),[centerChangedListener,setCenterChangedListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dblclickListener,setDblclickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragendListener,setDragendListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragstartListener,setDragstartListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mousedownListener,setMousedownListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mousemoveListener,setMousemoveListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseoutListener,setMouseoutListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseoverListener,setMouseoverListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseupListener,setMouseupListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[rightclickListener,setRightclickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[clickListener,setClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragListener,setDragListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{options&&null!==map&&map.setOptions(options)},[map,options]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{null!==map&&void 0!==center&&map.setCenter(center)},[map,center]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{map&&onDblClick&&(null!==dblclickListener&&google.maps.event.removeListener(dblclickListener),setDblclickListener(google.maps.event.addListener(map,"dblclick",onDblClick)))},[onDblClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{map&&onDragEnd&&(null!==dragendListener&&google.maps.event.removeListener(dragendListener),setDragendListener(google.maps.event.addListener(map,"dragend",onDragEnd)))},[onDragEnd]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{map&&onDragStart&&(null!==dragstartListener&&google.maps.event.removeListener(dragstartListener),setDragstartListener(google.maps.event.addListener(map,"dragstart",onDragStart)))},[onDragStart]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{map&&onMouseDown&&(null!==mousedownListener&&google.maps.event.removeListener(mousedownListener),setMousedownListener(google.maps.event.addListener(map,"mousedown",onMouseDown)))},[onMouseDown]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{map&&onMouseMove&&(null!==mousemoveListener&&google.maps.event.removeListener(mousemoveListener),setMousemoveListener(google.maps.event.addListener(map,"mousemove",onMouseMove)))},[onMouseMove]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{map&&onMouseOut&&(null!==mouseoutListener&&google.maps.event.removeListener(mouseoutListener),setMouseoutListener(google.maps.event.addListener(map,"mouseout",onMouseOut)))},[onMouseOut]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{map&&onMouseOver&&(null!==mouseoverListener&&google.maps.event.removeListener(mouseoverListener),setMouseoverListener(google.maps.event.addListener(map,"mouseover",onMouseOver)))},[onMouseOver]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{map&&onMouseUp&&(null!==mouseupListener&&google.maps.event.removeListener(mouseupListener),setMouseupListener(google.maps.event.addListener(map,"mouseup",onMouseUp)))},[onMouseUp]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{map&&onRightClick&&(null!==rightclickListener&&google.maps.event.removeListener(rightclickListener),setRightclickListener(google.maps.event.addListener(map,"rightclick",onRightClick)))},[onRightClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{map&&onClick&&(null!==clickListener&&google.maps.event.removeListener(clickListener),setClickListener(google.maps.event.addListener(map,"click",onClick)))},[onClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{map&&onDrag&&(null!==dragListener&&google.maps.event.removeListener(dragListener),setDragListener(google.maps.event.addListener(map,"drag",onDrag)))},[onDrag]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{map&&onCenterChanged&&(null!==centerChangedListener&&google.maps.event.removeListener(centerChangedListener),setCenterChangedListener(google.maps.event.addListener(map,"center_changed",onCenterChanged)))},[onClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{let map=null===ref.current?null:new google.maps.Map(ref.current,options);return setMap(map),null!==map&&onLoad&&onLoad(map),()=>{null!==map&&onUnmount&&onUnmount(map)}},[]),jsxRuntime.exports.jsx("div",Object.assign({id:id,ref:ref,style:mapContainerStyle,className:mapContainerClassName},{children:jsxRuntime.exports.jsx(MapContext.Provider,Object.assign({value:map},{children:null!==map?children:jsxRuntime.exports.jsx(jsxRuntime.exports.Fragment,{})}))}))});class GoogleMap extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.state={map:null},this.registeredEvents=[],this.mapRef=null,this.getInstance=()=>null===this.mapRef?null:new google.maps.Map(this.mapRef,this.props.options),this.panTo=latLng=>{let map=this.getInstance();map&&map.panTo(latLng)},this.setMapCallback=()=>{null!==this.state.map&&this.props.onLoad&&this.props.onLoad(this.state.map)},this.getRef=ref=>{this.mapRef=ref}}componentDidMount(){let map=this.getInstance();this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$i,eventMap:eventMap$i,prevProps:{},nextProps:this.props,instance:map}),this.setState(function(){return{map}},this.setMapCallback)}componentDidUpdate(prevProps){null!==this.state.map&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$i,eventMap:eventMap$i,prevProps,nextProps:this.props,instance:this.state.map}))}componentWillUnmount(){null!==this.state.map&&(this.props.onUnmount&&this.props.onUnmount(this.state.map),unregisterEvents(this.registeredEvents))}render(){return jsxRuntime.exports.jsx("div",Object.assign({id:this.props.id,ref:this.getRef,style:this.props.mapContainerStyle,className:this.props.mapContainerClassName},{children:jsxRuntime.exports.jsx(MapContext.Provider,Object.assign({value:this.state.map},{children:null!==this.state.map?this.props.children:jsxRuntime.exports.jsx(jsxRuntime.exports.Fragment,{})}))}))}}/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ function __rest$1(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t}let isBrowser="undefined"!=typeof document;function injectScript({url,id,nonce}){return isBrowser?new Promise(function(resolve,reject){let existingScript=document.getElementById(id),windowWithGoogleMap=window;if(existingScript){let dataStateAttribute=existingScript.getAttribute("data-state");if(existingScript.src===url&&"error"!==dataStateAttribute){if("ready"===dataStateAttribute)return resolve(id);{let originalInitMap=windowWithGoogleMap.initMap,originalErrorCallback=existingScript.onerror;windowWithGoogleMap.initMap=function(){originalInitMap&&originalInitMap(),resolve(id)},existingScript.onerror=function(err){originalErrorCallback&&originalErrorCallback(err),reject(err)};return}}existingScript.remove()}let script=document.createElement("script");script.type="text/javascript",script.src=url,script.id=id,script.async=!0,script.nonce=nonce,script.onerror=function(err){script.setAttribute("data-state","error"),reject(err)},windowWithGoogleMap.initMap=function(){script.setAttribute("data-state","ready"),resolve(id)},document.head.appendChild(script)}).catch(err=>{throw console.error("injectScript error: ",err),err}):Promise.reject(Error("document is undefined"))}function isGoogleFontStyle(element){let href=element.href;return!!href&&(0===href.indexOf("https://fonts.googleapis.com/css?family=Roboto")||0===href.indexOf("https://fonts.googleapis.com/css?family=Google+Sans+Text"))||("style"===element.tagName.toLowerCase()&&element.styleSheet&&element.styleSheet.cssText&&0===element.styleSheet.cssText.replace("\r\n","").indexOf(".gm-style")?(element.styleSheet.cssText="",!0):"style"===element.tagName.toLowerCase()&&element.innerHTML&&0===element.innerHTML.replace("\r\n","").indexOf(".gm-style")?(element.innerHTML="",!0):"style"===element.tagName.toLowerCase()&&!element.styleSheet&&!element.innerHTML)}function preventGoogleFonts(){let head=document.getElementsByTagName("head")[0],trueInsertBefore=head.insertBefore.bind(head);head.insertBefore=function(newElement,referenceElement){isGoogleFontStyle(newElement)||Reflect.apply(trueInsertBefore,head,[newElement,referenceElement])};let trueAppend=head.appendChild.bind(head);head.appendChild=function(textNode){isGoogleFontStyle(textNode)||Reflect.apply(trueAppend,head,[textNode])}}function makeLoadScriptUrl({googleMapsApiKey,googleMapsClientId,version="weekly",language,region,libraries,channel,mapIds,authReferrerPolicy}){let params=[];return invariant_1(googleMapsApiKey&&googleMapsClientId||!(googleMapsApiKey&&googleMapsClientId),"You need to specify either googleMapsApiKey or googleMapsClientId for @react-google-maps/api load script to work. You cannot use both at the same time."),googleMapsApiKey?params.push(`key=${googleMapsApiKey}`):googleMapsClientId&&params.push(`client=${googleMapsClientId}`),version&&params.push(`v=${version}`),language&&params.push(`language=${language}`),region&&params.push(`region=${region}`),libraries&&libraries.length&&params.push(`libraries=${libraries.sort().join(",")}`),channel&&params.push(`channel=${channel}`),mapIds&&mapIds.length&&params.push(`map_ids=${mapIds.join(",")}`),authReferrerPolicy&&params.push(`auth_referrer_policy=${authReferrerPolicy}`),params.push("callback=initMap"),`https://maps.googleapis.com/maps/api/js?${params.join("&")}`}let cleaningUp=!1;function DefaultLoadingElement(){return jsxRuntime.exports.jsx("div",{children:"Loading..."})}let defaultLoadScriptProps={id:"script-loader",version:"weekly"};class LoadScript extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.check=(0,react__WEBPACK_IMPORTED_MODULE_0__.createRef)(),this.state={loaded:!1},this.cleanupCallback=()=>{delete window.google.maps,this.injectScript()},this.isCleaningUp=()=>{var thisArg,_arguments,P,generator;return thisArg=this,_arguments=void 0,P=void 0,generator=function*(){return new Promise(function(resolve){if(cleaningUp){if(isBrowser){let timer=window.setInterval(function(){cleaningUp||(window.clearInterval(timer),resolve())},1)}}else resolve()})},new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator.throw(value))}catch(e){reject(e)}}function step(result){var value;result.done?resolve(result.value):((value=result.value)instanceof P?value:new P(function(resolve){resolve(value)})).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())})},this.cleanup=()=>{cleaningUp=!0;let script=document.getElementById(this.props.id);script&&script.parentNode&&script.parentNode.removeChild(script),Array.prototype.slice.call(document.getElementsByTagName("script")).filter(function(script){return"string"==typeof script.src&&script.src.includes("maps.googleapis")}).forEach(function(script){script.parentNode&&script.parentNode.removeChild(script)}),Array.prototype.slice.call(document.getElementsByTagName("link")).filter(function(link){return"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Google+Sans"===link.href}).forEach(function(link){link.parentNode&&link.parentNode.removeChild(link)}),Array.prototype.slice.call(document.getElementsByTagName("style")).filter(function(style){return void 0!==style.innerText&&style.innerText.length>0&&style.innerText.includes(".gm-")}).forEach(function(style){style.parentNode&&style.parentNode.removeChild(style)})},this.injectScript=()=>{this.props.preventGoogleFontsLoading&&preventGoogleFonts(),invariant_1(!!this.props.id,'LoadScript requires "id" prop to be a string: %s',this.props.id);let injectScriptOptions={id:this.props.id,nonce:this.props.nonce,url:makeLoadScriptUrl(this.props)};injectScript(injectScriptOptions).then(()=>{this.props.onLoad&&this.props.onLoad(),this.setState(function(){return{loaded:!0}})}).catch(err=>{this.props.onError&&this.props.onError(err),console.error(`
          There has been an Error with loading Google Maps API script, please check that you provided correct google API key (${this.props.googleMapsApiKey||"-"}) or Client ID (${this.props.googleMapsClientId||"-"}) to <LoadScript />
          Otherwise it is a Network issue.
        `)})}}componentDidMount(){if(isBrowser){if(window.google&&window.google.maps&&!cleaningUp){console.error("google api is already presented");return}this.isCleaningUp().then(this.injectScript).catch(function(err){console.error("Error at injecting script after cleaning up: ",err)})}}componentDidUpdate(prevProps){this.props.libraries!==prevProps.libraries&&console.warn("Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables"),isBrowser&&prevProps.language!==this.props.language&&(this.cleanup(),this.setState(function(){return{loaded:!1}},this.cleanupCallback))}componentWillUnmount(){if(isBrowser){this.cleanup();let timeoutCallback=()=>{this.check.current||(delete window.google,cleaningUp=!1)};window.setTimeout(timeoutCallback,1),this.props.onUnmount&&this.props.onUnmount()}}render(){return jsxRuntime.exports.jsxs(jsxRuntime.exports.Fragment,{children:[jsxRuntime.exports.jsx("div",{ref:this.check}),this.state.loaded?this.props.children:this.props.loadingElement||jsxRuntime.exports.jsx(DefaultLoadingElement,{})]})}}function useLoadScript({id=defaultLoadScriptProps.id,version=defaultLoadScriptProps.version,nonce,googleMapsApiKey,googleMapsClientId,language,region,libraries,preventGoogleFontsLoading,channel,mapIds,authReferrerPolicy}){let isMounted=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(!1),[isLoaded,setLoaded]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[loadError,setLoadError]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(void 0);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function(){return isMounted.current=!0,()=>{isMounted.current=!1}},[]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function(){isBrowser&&preventGoogleFontsLoading&&preventGoogleFonts()},[preventGoogleFontsLoading]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function(){isLoaded&&invariant_1(!!window.google,"useLoadScript was marked as loaded, but window.google is not present. Something went wrong.")},[isLoaded]);let url=makeLoadScriptUrl({version,googleMapsApiKey,googleMapsClientId,language,region,libraries,channel,mapIds,authReferrerPolicy});(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function(){if(isBrowser){if(window.google&&window.google.maps&&previouslyLoadedUrl===url){setLoadedIfMounted();return}injectScript({id,url,nonce}).then(setLoadedIfMounted).catch(function(err){isMounted.current&&setLoadError(err),console.warn(`
        There has been an Error with loading Google Maps API script, please check that you provided correct google API key (${googleMapsApiKey||"-"}) or Client ID (${googleMapsClientId||"-"})
        Otherwise it is a Network issue.
      `),console.error(err)})}function setLoadedIfMounted(){isMounted.current&&(setLoaded(!0),previouslyLoadedUrl=url)}},[id,url,nonce]);let prevLibraries=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function(){prevLibraries.current&&libraries!==prevLibraries.current&&console.warn("Performance warning! LoadScript has been reloaded unintentionally! You should not pass `libraries` prop as new array. Please keep an array of libraries as static class property for Components and PureComponents, or just a const variable outside of component, or somewhere in config files or ENV variables"),prevLibraries.current=libraries},[libraries]),{isLoaded,loadError,url}}LoadScript.defaultProps=defaultLoadScriptProps;let defaultLoadingElement=jsxRuntime.exports.jsx(DefaultLoadingElement,{});(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function(_a){var{loadingElement,onLoad,onError,onUnmount,children}=_a,hookOptions=__rest$1(_a,["loadingElement","onLoad","onError","onUnmount","children"]);let{isLoaded,loadError}=useLoadScript(hookOptions);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function(){isLoaded&&"function"==typeof onLoad&&onLoad()},[isLoaded,onLoad]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function(){loadError&&"function"==typeof onError&&onError(loadError)},[loadError,onError]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function(){return()=>{onUnmount&&onUnmount()}},[onUnmount]),isLoaded?children:loadingElement||defaultLoadingElement}),(LoaderStatus=LoaderStatus1||(LoaderStatus1={}))[LoaderStatus.INITIALIZED=0]="INITIALIZED",LoaderStatus[LoaderStatus.LOADING=1]="LOADING",LoaderStatus[LoaderStatus.SUCCESS=2]="SUCCESS",LoaderStatus[LoaderStatus.FAILURE=3]="FAILURE";let eventMap$h={},updaterMap$h={options(instance,options){instance.setOptions(options)}};(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function({options,onLoad,onUnmount}){let map=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MapContext),[instance,setInstance]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{null!==instance&&instance.setMap(map)},[map]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{options&&null!==instance&&instance.setOptions(options)},[instance,options]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{let trafficLayer=new google.maps.TrafficLayer(Object.assign(Object.assign({},options||{}),{map}));return setInstance(trafficLayer),onLoad&&onLoad(trafficLayer),()=>{null!==instance&&(onUnmount&&onUnmount(instance),instance.setMap(null))}},[]),null});class TrafficLayer extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.state={trafficLayer:null},this.setTrafficLayerCallback=()=>{null!==this.state.trafficLayer&&this.props.onLoad&&this.props.onLoad(this.state.trafficLayer)},this.registeredEvents=[]}componentDidMount(){let trafficLayer=new google.maps.TrafficLayer(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$h,eventMap:eventMap$h,prevProps:{},nextProps:this.props,instance:trafficLayer}),this.setState(function(){return{trafficLayer}},this.setTrafficLayerCallback)}componentDidUpdate(prevProps){null!==this.state.trafficLayer&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$h,eventMap:eventMap$h,prevProps,nextProps:this.props,instance:this.state.trafficLayer}))}componentWillUnmount(){null!==this.state.trafficLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.trafficLayer),unregisterEvents(this.registeredEvents),this.state.trafficLayer.setMap(null))}render(){return null}}TrafficLayer.contextType=MapContext,(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function({onLoad,onUnmount}){let map=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MapContext),[instance,setInstance]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{null!==instance&&instance.setMap(map)},[map]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{let bicyclingLayer=new google.maps.BicyclingLayer;return setInstance(bicyclingLayer),bicyclingLayer.setMap(map),onLoad&&onLoad(bicyclingLayer),()=>{null!==bicyclingLayer&&(onUnmount&&onUnmount(bicyclingLayer),bicyclingLayer.setMap(null))}},[]),null});class BicyclingLayer extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.state={bicyclingLayer:null},this.setBicyclingLayerCallback=()=>{null!==this.state.bicyclingLayer&&(this.state.bicyclingLayer.setMap(this.context),this.props.onLoad&&this.props.onLoad(this.state.bicyclingLayer))}}componentDidMount(){let bicyclingLayer=new google.maps.BicyclingLayer;this.setState(()=>({bicyclingLayer}),this.setBicyclingLayerCallback)}componentWillUnmount(){null!==this.state.bicyclingLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.bicyclingLayer),this.state.bicyclingLayer.setMap(null))}render(){return null}}BicyclingLayer.contextType=MapContext,(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function({onLoad,onUnmount}){let map=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MapContext),[instance,setInstance]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{null!==instance&&instance.setMap(map)},[map]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{let transitLayer=new google.maps.TransitLayer;return setInstance(transitLayer),transitLayer.setMap(map),onLoad&&onLoad(transitLayer),()=>{null!==instance&&(onUnmount&&onUnmount(instance),this.state.transitLayer.setMap(null))}},[]),null});class TransitLayer extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.state={transitLayer:null},this.setTransitLayerCallback=()=>{null!==this.state.transitLayer&&(this.state.transitLayer.setMap(this.context),this.props.onLoad&&this.props.onLoad(this.state.transitLayer))}}componentDidMount(){let transitLayer=new google.maps.TransitLayer;this.setState(function(){return{transitLayer}},this.setTransitLayerCallback)}componentWillUnmount(){null!==this.state.transitLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.transitLayer),this.state.transitLayer.setMap(null))}render(){return null}}TransitLayer.contextType=MapContext;let eventMap$g={onCircleComplete:"circlecomplete",onMarkerComplete:"markercomplete",onOverlayComplete:"overlaycomplete",onPolygonComplete:"polygoncomplete",onPolylineComplete:"polylinecomplete",onRectangleComplete:"rectanglecomplete"},updaterMap$g={drawingMode(instance,drawingMode){instance.setDrawingMode(drawingMode)},options(instance,options){instance.setOptions(options)}};(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function({options,drawingMode,onCircleComplete,onMarkerComplete,onOverlayComplete,onPolygonComplete,onPolylineComplete,onRectangleComplete,onLoad,onUnmount}){let map=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MapContext),[instance,setInstance]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[circlecompleteListener,setCircleCompleteListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[markercompleteListener,setMarkerCompleteListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[overlaycompleteListener,setOverlayCompleteListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[polygoncompleteListener,setPolygonCompleteListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[polylinecompleteListener,setPolylineCompleteListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[rectanglecompleteListener,setRectangleCompleteListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{null!==instance&&instance.setMap(map)},[map]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{options&&null!==instance&&instance.setOptions(options)},[instance,options]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{drawingMode&&null!==instance&&instance.setDrawingMode(drawingMode)},[instance,drawingMode]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onCircleComplete&&(null!==circlecompleteListener&&google.maps.event.removeListener(circlecompleteListener),setCircleCompleteListener(google.maps.event.addListener(instance,"circlecomplete",onCircleComplete)))},[instance,onCircleComplete]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMarkerComplete&&(null!==markercompleteListener&&google.maps.event.removeListener(markercompleteListener),setMarkerCompleteListener(google.maps.event.addListener(instance,"markercomplete",onMarkerComplete)))},[instance,onMarkerComplete]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onOverlayComplete&&(null!==overlaycompleteListener&&google.maps.event.removeListener(overlaycompleteListener),setOverlayCompleteListener(google.maps.event.addListener(instance,"overlaycomplete",onOverlayComplete)))},[instance,onOverlayComplete]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onPolygonComplete&&(null!==polygoncompleteListener&&google.maps.event.removeListener(polygoncompleteListener),setPolygonCompleteListener(google.maps.event.addListener(instance,"polygoncomplete",onPolygonComplete)))},[instance,onPolygonComplete]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onPolylineComplete&&(null!==polylinecompleteListener&&google.maps.event.removeListener(polylinecompleteListener),setPolylineCompleteListener(google.maps.event.addListener(instance,"polylinecomplete",onPolylineComplete)))},[instance,onPolylineComplete]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onRectangleComplete&&(null!==rectanglecompleteListener&&google.maps.event.removeListener(rectanglecompleteListener),setRectangleCompleteListener(google.maps.event.addListener(instance,"rectanglecomplete",onRectangleComplete)))},[instance,onRectangleComplete]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{invariant_1(!!google.maps.drawing,"Did you include prop libraries={['drawing']} in the URL? %s",google.maps.drawing);let drawingManager=new google.maps.drawing.DrawingManager(Object.assign(Object.assign({},options||{}),{map}));return drawingMode&&drawingManager.setDrawingMode(drawingMode),onCircleComplete&&setCircleCompleteListener(google.maps.event.addListener(drawingManager,"circlecomplete",onCircleComplete)),onMarkerComplete&&setMarkerCompleteListener(google.maps.event.addListener(drawingManager,"markercomplete",onMarkerComplete)),onOverlayComplete&&setOverlayCompleteListener(google.maps.event.addListener(drawingManager,"overlaycomplete",onOverlayComplete)),onPolygonComplete&&setPolygonCompleteListener(google.maps.event.addListener(drawingManager,"polygoncomplete",onPolygonComplete)),onPolylineComplete&&setPolylineCompleteListener(google.maps.event.addListener(drawingManager,"polylinecomplete",onPolylineComplete)),onRectangleComplete&&setRectangleCompleteListener(google.maps.event.addListener(drawingManager,"rectanglecomplete",onRectangleComplete)),setInstance(drawingManager),onLoad&&onLoad(drawingManager),()=>{null!==instance&&(circlecompleteListener&&google.maps.event.removeListener(circlecompleteListener),markercompleteListener&&google.maps.event.removeListener(markercompleteListener),overlaycompleteListener&&google.maps.event.removeListener(overlaycompleteListener),polygoncompleteListener&&google.maps.event.removeListener(polygoncompleteListener),polylinecompleteListener&&google.maps.event.removeListener(polylinecompleteListener),rectanglecompleteListener&&google.maps.event.removeListener(rectanglecompleteListener),onUnmount&&onUnmount(instance),instance.setMap(null))}},[]),null});class DrawingManager extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(props){super(props),this.registeredEvents=[],this.state={drawingManager:null},this.setDrawingManagerCallback=()=>{null!==this.state.drawingManager&&this.props.onLoad&&this.props.onLoad(this.state.drawingManager)},invariant_1(!!google.maps.drawing,"Did you include prop libraries={['drawing']} in the URL? %s",google.maps.drawing)}componentDidMount(){let drawingManager=new google.maps.drawing.DrawingManager(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$g,eventMap:eventMap$g,prevProps:{},nextProps:this.props,instance:drawingManager}),this.setState(function(){return{drawingManager}},this.setDrawingManagerCallback)}componentDidUpdate(prevProps){null!==this.state.drawingManager&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$g,eventMap:eventMap$g,prevProps,nextProps:this.props,instance:this.state.drawingManager}))}componentWillUnmount(){null!==this.state.drawingManager&&(this.props.onUnmount&&this.props.onUnmount(this.state.drawingManager),unregisterEvents(this.registeredEvents),this.state.drawingManager.setMap(null))}render(){return null}}DrawingManager.contextType=MapContext;let eventMap$f={onAnimationChanged:"animation_changed",onClick:"click",onClickableChanged:"clickable_changed",onCursorChanged:"cursor_changed",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDraggableChanged:"draggable_changed",onDragStart:"dragstart",onFlatChanged:"flat_changed",onIconChanged:"icon_changed",onMouseDown:"mousedown",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onPositionChanged:"position_changed",onRightClick:"rightclick",onShapeChanged:"shape_changed",onTitleChanged:"title_changed",onVisibleChanged:"visible_changed",onZindexChanged:"zindex_changed"},updaterMap$f={animation(instance,animation){instance.setAnimation(animation)},clickable(instance,clickable){instance.setClickable(clickable)},cursor(instance,cursor){instance.setCursor(cursor)},draggable(instance,draggable){instance.setDraggable(draggable)},icon(instance,icon){instance.setIcon(icon)},label(instance,label){instance.setLabel(label)},map(instance,map){instance.setMap(map)},opacity(instance,opacity){instance.setOpacity(opacity)},options(instance,options){instance.setOptions(options)},position(instance,position){instance.setPosition(position)},shape(instance,shape){instance.setShape(shape)},title(instance,title){instance.setTitle(title)},visible(instance,visible){instance.setVisible(visible)},zIndex(instance,zIndex){instance.setZIndex(zIndex)}},defaultOptions$5={},MarkerF=(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function({position,options,clusterer,noClustererRedraw,children,draggable,visible,animation,clickable,cursor,icon,label,opacity,shape,title,zIndex,onClick,onDblClick,onDrag,onDragEnd,onDragStart,onMouseOut,onMouseOver,onMouseUp,onMouseDown,onRightClick,onClickableChanged,onCursorChanged,onAnimationChanged,onDraggableChanged,onFlatChanged,onIconChanged,onPositionChanged,onShapeChanged,onTitleChanged,onVisibleChanged,onZindexChanged,onLoad,onUnmount}){let map=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MapContext),[instance,setInstance]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dblclickListener,setDblclickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragendListener,setDragendListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragstartListener,setDragstartListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mousedownListener,setMousedownListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseoutListener,setMouseoutListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseoverListener,setMouseoverListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseupListener,setMouseupListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[rightclickListener,setRightclickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[clickListener,setClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragListener,setDragListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[clickableChangedListener,setClickableChangedListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[cursorChangedListener,setCursorChangedListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[animationChangedListener,setAnimationChangedListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[draggableChangedListener,setDraggableChangedListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[flatChangedListener,setFlatChangedListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[iconChangedListener,setIconChangedListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[positionChangedListener,setPositionChangedListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[shapeChangedListener,setShapeChangedListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[titleChangedListener,setTitleChangedListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[visibleChangedListener,setVisibleChangedListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[zIndexChangedListener,setZindexChangedListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{null!==instance&&instance.setMap(map)},[map]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==options&&null!==instance&&instance.setOptions(options)},[instance,options]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==draggable&&null!==instance&&instance.setDraggable(draggable)},[instance,draggable]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{position&&null!==instance&&instance.setPosition(position)},[instance,position]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==visible&&null!==instance&&instance.setVisible(visible)},[instance,visible]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{animation&&null!==instance&&instance.setAnimation(animation)},[instance,animation]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDblClick&&(null!==dblclickListener&&google.maps.event.removeListener(dblclickListener),setDblclickListener(google.maps.event.addListener(instance,"dblclick",onDblClick)))},[onDblClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDragEnd&&(null!==dragendListener&&google.maps.event.removeListener(dragendListener),setDragendListener(google.maps.event.addListener(instance,"dragend",onDragEnd)))},[onDragEnd]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDragStart&&(null!==dragstartListener&&google.maps.event.removeListener(dragstartListener),setDragstartListener(google.maps.event.addListener(instance,"dragstart",onDragStart)))},[onDragStart]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseDown&&(null!==mousedownListener&&google.maps.event.removeListener(mousedownListener),setMousedownListener(google.maps.event.addListener(instance,"mousedown",onMouseDown)))},[onMouseDown]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseOut&&(null!==mouseoutListener&&google.maps.event.removeListener(mouseoutListener),setMouseoutListener(google.maps.event.addListener(instance,"mouseout",onMouseOut)))},[onMouseOut]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseOver&&(null!==mouseoverListener&&google.maps.event.removeListener(mouseoverListener),setMouseoverListener(google.maps.event.addListener(instance,"mouseover",onMouseOver)))},[onMouseOver]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseUp&&(null!==mouseupListener&&google.maps.event.removeListener(mouseupListener),setMouseupListener(google.maps.event.addListener(instance,"mouseup",onMouseUp)))},[onMouseUp]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onRightClick&&(null!==rightclickListener&&google.maps.event.removeListener(rightclickListener),setRightclickListener(google.maps.event.addListener(instance,"rightclick",onRightClick)))},[onRightClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onClick&&(null!==clickListener&&google.maps.event.removeListener(clickListener),setClickListener(google.maps.event.addListener(instance,"click",onClick)))},[onClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDrag&&(null!==dragListener&&google.maps.event.removeListener(dragListener),setDragListener(google.maps.event.addListener(instance,"drag",onDrag)))},[onDrag]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onClickableChanged&&(null!==clickableChangedListener&&google.maps.event.removeListener(clickableChangedListener),setClickableChangedListener(google.maps.event.addListener(instance,"clickable_changed",onClickableChanged)))},[onClickableChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onCursorChanged&&(null!==cursorChangedListener&&google.maps.event.removeListener(cursorChangedListener),setCursorChangedListener(google.maps.event.addListener(instance,"cursor_changed",onCursorChanged)))},[onCursorChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onAnimationChanged&&(null!==animationChangedListener&&google.maps.event.removeListener(animationChangedListener),setAnimationChangedListener(google.maps.event.addListener(instance,"animation_changed",onAnimationChanged)))},[onAnimationChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDraggableChanged&&(null!==draggableChangedListener&&google.maps.event.removeListener(draggableChangedListener),setDraggableChangedListener(google.maps.event.addListener(instance,"draggable_changed",onDraggableChanged)))},[onDraggableChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onFlatChanged&&(null!==flatChangedListener&&google.maps.event.removeListener(flatChangedListener),setFlatChangedListener(google.maps.event.addListener(instance,"flat_changed",onFlatChanged)))},[onFlatChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onIconChanged&&(null!==iconChangedListener&&google.maps.event.removeListener(iconChangedListener),setIconChangedListener(google.maps.event.addListener(instance,"icon_changed",onIconChanged)))},[onIconChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onPositionChanged&&(null!==positionChangedListener&&google.maps.event.removeListener(positionChangedListener),setPositionChangedListener(google.maps.event.addListener(instance,"position_changed",onPositionChanged)))},[onPositionChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onShapeChanged&&(null!==shapeChangedListener&&google.maps.event.removeListener(shapeChangedListener),setShapeChangedListener(google.maps.event.addListener(instance,"shape_changed",onShapeChanged)))},[onShapeChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onTitleChanged&&(null!==titleChangedListener&&google.maps.event.removeListener(titleChangedListener),setTitleChangedListener(google.maps.event.addListener(instance,"title_changed",onTitleChanged)))},[onTitleChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onVisibleChanged&&(null!==visibleChangedListener&&google.maps.event.removeListener(visibleChangedListener),setVisibleChangedListener(google.maps.event.addListener(instance,"visible_changed",onVisibleChanged)))},[onVisibleChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onZindexChanged&&(null!==zIndexChangedListener&&google.maps.event.removeListener(zIndexChangedListener),setZindexChangedListener(google.maps.event.addListener(instance,"zindex_changed",onZindexChanged)))},[onZindexChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{let markerOptions=Object.assign(Object.assign(Object.assign({},options||defaultOptions$5),clusterer?defaultOptions$5:{map}),{position:position}),marker=new google.maps.Marker(markerOptions);return clusterer?clusterer.addMarker(marker,!!noClustererRedraw):marker.setMap(map),position&&marker.setPosition(position),void 0!==visible&&marker.setVisible(visible),void 0!==draggable&&marker.setDraggable(draggable),void 0!==clickable&&marker.setClickable(clickable),"string"==typeof cursor&&marker.setCursor(cursor),icon&&marker.setIcon(icon),void 0!==label&&marker.setLabel(label),void 0!==opacity&&marker.setOpacity(opacity),shape&&marker.setShape(shape),"string"==typeof title&&marker.setTitle(title),"number"==typeof zIndex&&marker.setZIndex(zIndex),onDblClick&&setDblclickListener(google.maps.event.addListener(marker,"dblclick",onDblClick)),onDragEnd&&setDragendListener(google.maps.event.addListener(marker,"dragend",onDragEnd)),onDragStart&&setDragstartListener(google.maps.event.addListener(marker,"dragstart",onDragStart)),onMouseDown&&setMousedownListener(google.maps.event.addListener(marker,"mousedown",onMouseDown)),onMouseOut&&setMouseoutListener(google.maps.event.addListener(marker,"mouseout",onMouseOut)),onMouseOver&&setMouseoverListener(google.maps.event.addListener(marker,"mouseover",onMouseOver)),onMouseUp&&setMouseupListener(google.maps.event.addListener(marker,"mouseup",onMouseUp)),onRightClick&&setRightclickListener(google.maps.event.addListener(marker,"rightclick",onRightClick)),onClick&&setClickListener(google.maps.event.addListener(marker,"click",onClick)),onDrag&&setDragListener(google.maps.event.addListener(marker,"drag",onDrag)),onClickableChanged&&setClickableChangedListener(google.maps.event.addListener(marker,"clickable_changed",onClickableChanged)),onCursorChanged&&setCursorChangedListener(google.maps.event.addListener(marker,"cursor_changed",onCursorChanged)),onAnimationChanged&&setAnimationChangedListener(google.maps.event.addListener(marker,"animation_changed",onAnimationChanged)),onDraggableChanged&&setDraggableChangedListener(google.maps.event.addListener(marker,"draggable_changed",onDraggableChanged)),onFlatChanged&&setFlatChangedListener(google.maps.event.addListener(marker,"flat_changed",onFlatChanged)),onIconChanged&&setIconChangedListener(google.maps.event.addListener(marker,"icon_changed",onIconChanged)),onPositionChanged&&setPositionChangedListener(google.maps.event.addListener(marker,"position_changed",onPositionChanged)),onShapeChanged&&setShapeChangedListener(google.maps.event.addListener(marker,"shape_changed",onShapeChanged)),onTitleChanged&&setTitleChangedListener(google.maps.event.addListener(marker,"title_changed",onTitleChanged)),onVisibleChanged&&setVisibleChangedListener(google.maps.event.addListener(marker,"visible_changed",onVisibleChanged)),onZindexChanged&&setZindexChangedListener(google.maps.event.addListener(marker,"zindex_changed",onZindexChanged)),setInstance(marker),onLoad&&onLoad(marker),()=>{null!==dblclickListener&&google.maps.event.removeListener(dblclickListener),null!==dragendListener&&google.maps.event.removeListener(dragendListener),null!==dragstartListener&&google.maps.event.removeListener(dragstartListener),null!==mousedownListener&&google.maps.event.removeListener(mousedownListener),null!==mouseoutListener&&google.maps.event.removeListener(mouseoutListener),null!==mouseoverListener&&google.maps.event.removeListener(mouseoverListener),null!==mouseupListener&&google.maps.event.removeListener(mouseupListener),null!==rightclickListener&&google.maps.event.removeListener(rightclickListener),null!==clickListener&&google.maps.event.removeListener(clickListener),null!==clickableChangedListener&&google.maps.event.removeListener(clickableChangedListener),null!==cursorChangedListener&&google.maps.event.removeListener(cursorChangedListener),null!==animationChangedListener&&google.maps.event.removeListener(animationChangedListener),null!==draggableChangedListener&&google.maps.event.removeListener(draggableChangedListener),null!==flatChangedListener&&google.maps.event.removeListener(flatChangedListener),null!==iconChangedListener&&google.maps.event.removeListener(iconChangedListener),null!==positionChangedListener&&google.maps.event.removeListener(positionChangedListener),null!==titleChangedListener&&google.maps.event.removeListener(titleChangedListener),null!==visibleChangedListener&&google.maps.event.removeListener(visibleChangedListener),null!==zIndexChangedListener&&google.maps.event.removeListener(zIndexChangedListener),onUnmount&&onUnmount(marker),clusterer?clusterer.removeMarker(marker,!!noClustererRedraw):marker&&marker.setMap(null)}},[]);let chx=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>children?react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children,child=>(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(child)?(0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child,{anchor:instance}):child):null,[children,instance]);return jsxRuntime.exports.jsx(jsxRuntime.exports.Fragment,{children:chx})||null});class Marker extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.registeredEvents=[]}componentDidMount(){let markerOptions=Object.assign(Object.assign(Object.assign({},this.props.options||defaultOptions$5),this.props.clusterer?defaultOptions$5:{map:this.context}),{position:this.props.position});this.marker=new google.maps.Marker(markerOptions),this.props.clusterer?this.props.clusterer.addMarker(this.marker,!!this.props.noClustererRedraw):this.marker.setMap(this.context),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$f,eventMap:eventMap$f,prevProps:{},nextProps:this.props,instance:this.marker}),this.props.onLoad&&this.props.onLoad(this.marker)}componentDidUpdate(prevProps){this.marker&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$f,eventMap:eventMap$f,prevProps,nextProps:this.props,instance:this.marker}))}componentWillUnmount(){this.marker&&(this.props.onUnmount&&this.props.onUnmount(this.marker),unregisterEvents(this.registeredEvents),this.props.clusterer?this.props.clusterer.removeMarker(this.marker,!!this.props.noClustererRedraw):this.marker&&this.marker.setMap(null))}render(){let children=null;return this.props.children&&(children=react__WEBPACK_IMPORTED_MODULE_0__.Children.map(this.props.children,child=>(0,react__WEBPACK_IMPORTED_MODULE_0__.isValidElement)(child)?(0,react__WEBPACK_IMPORTED_MODULE_0__.cloneElement)(child,{anchor:this.marker}):child)),children||null}}Marker.contextType=MapContext;var ClusterIcon=function(){function ClusterIcon(cluster,styles){cluster.getClusterer().extend(ClusterIcon,google.maps.OverlayView),this.cluster=cluster,this.clusterClassName=this.cluster.getClusterer().getClusterClass(),this.className=this.clusterClassName,this.styles=styles,this.center=void 0,this.div=null,this.sums=null,this.visible=!1,this.boundsChangedListener=null,this.url="",this.height=0,this.width=0,this.anchorText=[0,0],this.anchorIcon=[0,0],this.textColor="black",this.textSize=11,this.textDecoration="none",this.fontWeight="bold",this.fontStyle="normal",this.fontFamily="Arial,sans-serif",this.backgroundPosition="0 0",this.cMouseDownInCluster=null,this.cDraggingMapByCluster=null,this.timeOut=null,this.setMap(cluster.getMap()),this.onBoundsChanged=this.onBoundsChanged.bind(this),this.onMouseDown=this.onMouseDown.bind(this),this.onClick=this.onClick.bind(this),this.onMouseOver=this.onMouseOver.bind(this),this.onMouseOut=this.onMouseOut.bind(this),this.onAdd=this.onAdd.bind(this),this.onRemove=this.onRemove.bind(this),this.draw=this.draw.bind(this),this.hide=this.hide.bind(this),this.show=this.show.bind(this),this.useStyle=this.useStyle.bind(this),this.setCenter=this.setCenter.bind(this),this.getPosFromLatLng=this.getPosFromLatLng.bind(this)}return ClusterIcon.prototype.onBoundsChanged=function(){this.cDraggingMapByCluster=this.cMouseDownInCluster},ClusterIcon.prototype.onMouseDown=function(){this.cMouseDownInCluster=!0,this.cDraggingMapByCluster=!1},ClusterIcon.prototype.onClick=function(event){if(this.cMouseDownInCluster=!1,!this.cDraggingMapByCluster){var markerClusterer_1=this.cluster.getClusterer();if(google.maps.event.trigger(markerClusterer_1,"click",this.cluster),google.maps.event.trigger(markerClusterer_1,"clusterclick",this.cluster),markerClusterer_1.getZoomOnClick()){var maxZoom_1=markerClusterer_1.getMaxZoom(),bounds_1=this.cluster.getBounds(),map=markerClusterer_1.getMap();null!==map&&"fitBounds"in map&&map.fitBounds(bounds_1),this.timeOut=window.setTimeout(function(){var map=markerClusterer_1.getMap();if(null!==map){"fitBounds"in map&&map.fitBounds(bounds_1);var zoom=map.getZoom()||0;null!==maxZoom_1&&zoom>maxZoom_1&&map.setZoom(maxZoom_1+1)}},100)}event.cancelBubble=!0,event.stopPropagation&&event.stopPropagation()}},ClusterIcon.prototype.onMouseOver=function(){google.maps.event.trigger(this.cluster.getClusterer(),"mouseover",this.cluster)},ClusterIcon.prototype.onMouseOut=function(){google.maps.event.trigger(this.cluster.getClusterer(),"mouseout",this.cluster)},ClusterIcon.prototype.onAdd=function(){this.div=document.createElement("div"),this.div.className=this.className,this.visible&&this.show(),null===(_a=this.getPanes())||void 0===_a||_a.overlayMouseTarget.appendChild(this.div);var _a,map=this.getMap();null!==map&&(this.boundsChangedListener=google.maps.event.addListener(map,"bounds_changed",this.onBoundsChanged),this.div.addEventListener("mousedown",this.onMouseDown),this.div.addEventListener("click",this.onClick),this.div.addEventListener("mouseover",this.onMouseOver),this.div.addEventListener("mouseout",this.onMouseOut))},ClusterIcon.prototype.onRemove=function(){this.div&&this.div.parentNode&&(this.hide(),null!==this.boundsChangedListener&&google.maps.event.removeListener(this.boundsChangedListener),this.div.removeEventListener("mousedown",this.onMouseDown),this.div.removeEventListener("click",this.onClick),this.div.removeEventListener("mouseover",this.onMouseOver),this.div.removeEventListener("mouseout",this.onMouseOut),this.div.parentNode.removeChild(this.div),null!==this.timeOut&&(window.clearTimeout(this.timeOut),this.timeOut=null),this.div=null)},ClusterIcon.prototype.draw=function(){if(this.visible&&null!==this.div&&this.center){var pos=this.getPosFromLatLng(this.center);this.div.style.top=null!==pos?"".concat(pos.y,"px"):"0",this.div.style.left=null!==pos?"".concat(pos.x,"px"):"0"}},ClusterIcon.prototype.hide=function(){this.div&&(this.div.style.display="none"),this.visible=!1},ClusterIcon.prototype.show=function(){var _a,_b,_c,_d;if(this.div&&this.center){var divTitle=null===this.sums||void 0===this.sums.title||""===this.sums.title?this.cluster.getClusterer().getTitle():this.sums.title,bp=this.backgroundPosition.split(" "),spriteH=parseInt(bp[0].replace(/^\s+|\s+$/g,""),10),spriteV=parseInt(bp[1].replace(/^\s+|\s+$/g,""),10),pos=this.getPosFromLatLng(this.center);this.div.className=this.className,this.div.setAttribute("style","cursor: pointer; position: absolute; top: ".concat(null!==pos?"".concat(pos.y,"px"):"0","; left: ").concat(null!==pos?"".concat(pos.x,"px"):"0","; width: ").concat(this.width,"px; height: ").concat(this.height,"px; "));var img=document.createElement("img");img.alt=divTitle,img.src=this.url,img.width=this.width,img.height=this.height,img.setAttribute("style","position: absolute; top: ".concat(spriteV,"px; left: ").concat(spriteH,"px")),this.cluster.getClusterer().enableRetinaIcons||(img.style.clip="rect(-".concat(spriteV,"px, -").concat(spriteH+this.width,"px, -").concat(spriteV+this.height,", -").concat(spriteH,")"));var textElm=document.createElement("div");textElm.setAttribute("style","position: absolute; top: ".concat(this.anchorText[0],"px; left: ").concat(this.anchorText[1],"px; color: ").concat(this.textColor,"; font-size: ").concat(this.textSize,"px; font-family: ").concat(this.fontFamily,"; font-weight: ").concat(this.fontWeight,"; fontStyle: ").concat(this.fontStyle,"; text-decoration: ").concat(this.textDecoration,"; text-align: center; width: ").concat(this.width,"px; line-height: ").concat(this.height,"px")),(null===(_a=this.sums)||void 0===_a?void 0:_a.text)&&(textElm.innerText="".concat(null===(_b=this.sums)||void 0===_b?void 0:_b.text)),(null===(_c=this.sums)||void 0===_c?void 0:_c.html)&&(textElm.innerHTML="".concat(null===(_d=this.sums)||void 0===_d?void 0:_d.html)),this.div.innerHTML="",this.div.appendChild(img),this.div.appendChild(textElm),this.div.title=divTitle,this.div.style.display=""}this.visible=!0},ClusterIcon.prototype.useStyle=function(sums){this.sums=sums;var styles=this.cluster.getClusterer().getStyles(),style=styles[Math.min(styles.length-1,Math.max(0,sums.index-1))];this.url=style.url,this.height=style.height,this.width=style.width,style.className&&(this.className="".concat(this.clusterClassName," ").concat(style.className)),this.anchorText=style.anchorText||[0,0],this.anchorIcon=style.anchorIcon||[this.height/2,this.width/2],this.textColor=style.textColor||"black",this.textSize=style.textSize||11,this.textDecoration=style.textDecoration||"none",this.fontWeight=style.fontWeight||"bold",this.fontStyle=style.fontStyle||"normal",this.fontFamily=style.fontFamily||"Arial,sans-serif",this.backgroundPosition=style.backgroundPosition||"0 0"},ClusterIcon.prototype.setCenter=function(center){this.center=center},ClusterIcon.prototype.getPosFromLatLng=function(latlng){var pos=this.getProjection().fromLatLngToDivPixel(latlng);return null!==pos&&(pos.x-=this.anchorIcon[1],pos.y-=this.anchorIcon[0]),pos},ClusterIcon}(),Cluster$1=function(){function Cluster(markerClusterer){this.markerClusterer=markerClusterer,this.map=this.markerClusterer.getMap(),this.gridSize=this.markerClusterer.getGridSize(),this.minClusterSize=this.markerClusterer.getMinimumClusterSize(),this.averageCenter=this.markerClusterer.getAverageCenter(),this.markers=[],this.center=void 0,this.bounds=null,this.clusterIcon=new ClusterIcon(this,this.markerClusterer.getStyles()),this.getSize=this.getSize.bind(this),this.getMarkers=this.getMarkers.bind(this),this.getCenter=this.getCenter.bind(this),this.getMap=this.getMap.bind(this),this.getClusterer=this.getClusterer.bind(this),this.getBounds=this.getBounds.bind(this),this.remove=this.remove.bind(this),this.addMarker=this.addMarker.bind(this),this.isMarkerInClusterBounds=this.isMarkerInClusterBounds.bind(this),this.calculateBounds=this.calculateBounds.bind(this),this.updateIcon=this.updateIcon.bind(this),this.isMarkerAlreadyAdded=this.isMarkerAlreadyAdded.bind(this)}return Cluster.prototype.getSize=function(){return this.markers.length},Cluster.prototype.getMarkers=function(){return this.markers},Cluster.prototype.getCenter=function(){return this.center},Cluster.prototype.getMap=function(){return this.map},Cluster.prototype.getClusterer=function(){return this.markerClusterer},Cluster.prototype.getBounds=function(){for(var bounds=new google.maps.LatLngBounds(this.center,this.center),markers=this.getMarkers(),i=0;i<markers.length;i++){var position=markers[i].getPosition();position&&bounds.extend(position)}return bounds},Cluster.prototype.remove=function(){this.clusterIcon.setMap(null),this.markers=[],delete this.markers},Cluster.prototype.addMarker=function(marker){if(this.isMarkerAlreadyAdded(marker))return!1;if(this.center){if(this.averageCenter){var position=marker.getPosition();if(position){var length_1=this.markers.length+1;this.center=new google.maps.LatLng((this.center.lat()*(length_1-1)+position.lat())/length_1,(this.center.lng()*(length_1-1)+position.lng())/length_1),this.calculateBounds()}}}else{var _a,position=marker.getPosition();position&&(this.center=position,this.calculateBounds())}marker.isAdded=!0,this.markers.push(marker);var mCount=this.markers.length,maxZoom=this.markerClusterer.getMaxZoom(),zoom=null===(_a=this.map)||void 0===_a?void 0:_a.getZoom();if(null!==maxZoom&&void 0!==zoom&&zoom>maxZoom)marker.getMap()!==this.map&&marker.setMap(this.map);else if(mCount<this.minClusterSize)marker.getMap()!==this.map&&marker.setMap(this.map);else if(mCount===this.minClusterSize)for(var i=0;i<mCount;i++)this.markers[i].setMap(null);else marker.setMap(null);return!0},Cluster.prototype.isMarkerInClusterBounds=function(marker){if(null!==this.bounds){var position=marker.getPosition();if(position)return this.bounds.contains(position)}return!1},Cluster.prototype.calculateBounds=function(){this.bounds=this.markerClusterer.getExtendedBounds(new google.maps.LatLngBounds(this.center,this.center))},Cluster.prototype.updateIcon=function(){var _a,mCount=this.markers.length,maxZoom=this.markerClusterer.getMaxZoom(),zoom=null===(_a=this.map)||void 0===_a?void 0:_a.getZoom();if(null!==maxZoom&&void 0!==zoom&&zoom>maxZoom||mCount<this.minClusterSize){this.clusterIcon.hide();return}this.center&&this.clusterIcon.setCenter(this.center),this.clusterIcon.useStyle(this.markerClusterer.getCalculator()(this.markers,this.markerClusterer.getStyles().length)),this.clusterIcon.show()},Cluster.prototype.isMarkerAlreadyAdded=function(marker){if(this.markers.includes)return this.markers.includes(marker);for(var i=0;i<this.markers.length;i++)if(marker===this.markers[i])return!0;return!1},Cluster}();function CALCULATOR(markers,numStyles){var count=markers.length,numberOfDigits=count.toString().length;return{text:count.toString(),index:Math.min(numberOfDigits,numStyles),title:""}}var IMAGE_SIZES=[53,56,66,78,90],Clusterer=function(){function Clusterer(map,optMarkers,optOptions){void 0===optMarkers&&(optMarkers=[]),void 0===optOptions&&(optOptions={}),this.getMinimumClusterSize=this.getMinimumClusterSize.bind(this),this.setMinimumClusterSize=this.setMinimumClusterSize.bind(this),this.getEnableRetinaIcons=this.getEnableRetinaIcons.bind(this),this.setEnableRetinaIcons=this.setEnableRetinaIcons.bind(this),this.addToClosestCluster=this.addToClosestCluster.bind(this),this.getImageExtension=this.getImageExtension.bind(this),this.setImageExtension=this.setImageExtension.bind(this),this.getExtendedBounds=this.getExtendedBounds.bind(this),this.getAverageCenter=this.getAverageCenter.bind(this),this.setAverageCenter=this.setAverageCenter.bind(this),this.getTotalClusters=this.getTotalClusters.bind(this),this.fitMapToMarkers=this.fitMapToMarkers.bind(this),this.getIgnoreHidden=this.getIgnoreHidden.bind(this),this.setIgnoreHidden=this.setIgnoreHidden.bind(this),this.getClusterClass=this.getClusterClass.bind(this),this.setClusterClass=this.setClusterClass.bind(this),this.getTotalMarkers=this.getTotalMarkers.bind(this),this.getZoomOnClick=this.getZoomOnClick.bind(this),this.setZoomOnClick=this.setZoomOnClick.bind(this),this.getBatchSizeIE=this.getBatchSizeIE.bind(this),this.setBatchSizeIE=this.setBatchSizeIE.bind(this),this.createClusters=this.createClusters.bind(this),this.onZoomChanged=this.onZoomChanged.bind(this),this.getImageSizes=this.getImageSizes.bind(this),this.setImageSizes=this.setImageSizes.bind(this),this.getCalculator=this.getCalculator.bind(this),this.setCalculator=this.setCalculator.bind(this),this.removeMarkers=this.removeMarkers.bind(this),this.resetViewport=this.resetViewport.bind(this),this.getImagePath=this.getImagePath.bind(this),this.setImagePath=this.setImagePath.bind(this),this.pushMarkerTo=this.pushMarkerTo.bind(this),this.removeMarker=this.removeMarker.bind(this),this.clearMarkers=this.clearMarkers.bind(this),this.setupStyles=this.setupStyles.bind(this),this.getGridSize=this.getGridSize.bind(this),this.setGridSize=this.setGridSize.bind(this),this.getClusters=this.getClusters.bind(this),this.getMaxZoom=this.getMaxZoom.bind(this),this.setMaxZoom=this.setMaxZoom.bind(this),this.getMarkers=this.getMarkers.bind(this),this.addMarkers=this.addMarkers.bind(this),this.getStyles=this.getStyles.bind(this),this.setStyles=this.setStyles.bind(this),this.addMarker=this.addMarker.bind(this),this.onRemove=this.onRemove.bind(this),this.getTitle=this.getTitle.bind(this),this.setTitle=this.setTitle.bind(this),this.repaint=this.repaint.bind(this),this.onIdle=this.onIdle.bind(this),this.redraw=this.redraw.bind(this),this.extend=this.extend.bind(this),this.onAdd=this.onAdd.bind(this),this.draw=this.draw.bind(this),this.extend(Clusterer,google.maps.OverlayView),this.markers=[],this.clusters=[],this.listeners=[],this.activeMap=null,this.ready=!1,this.gridSize=optOptions.gridSize||60,this.minClusterSize=optOptions.minimumClusterSize||2,this.maxZoom=optOptions.maxZoom||null,this.styles=optOptions.styles||[],this.title=optOptions.title||"",this.zoomOnClick=!0,void 0!==optOptions.zoomOnClick&&(this.zoomOnClick=optOptions.zoomOnClick),this.averageCenter=!1,void 0!==optOptions.averageCenter&&(this.averageCenter=optOptions.averageCenter),this.ignoreHidden=!1,void 0!==optOptions.ignoreHidden&&(this.ignoreHidden=optOptions.ignoreHidden),this.enableRetinaIcons=!1,void 0!==optOptions.enableRetinaIcons&&(this.enableRetinaIcons=optOptions.enableRetinaIcons),this.imagePath=optOptions.imagePath||"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m",this.imageExtension=optOptions.imageExtension||"png",this.imageSizes=optOptions.imageSizes||IMAGE_SIZES,this.calculator=optOptions.calculator||CALCULATOR,this.batchSize=optOptions.batchSize||2e3,this.batchSizeIE=optOptions.batchSizeIE||500,this.clusterClass=optOptions.clusterClass||"cluster",-1!==navigator.userAgent.toLowerCase().indexOf("msie")&&(this.batchSize=this.batchSizeIE),this.timerRefStatic=null,this.setupStyles(),this.addMarkers(optMarkers,!0),this.setMap(map)}return Clusterer.prototype.onZoomChanged=function(){var _a,_b;this.resetViewport(!1),((null===(_a=this.getMap())||void 0===_a?void 0:_a.getZoom())===(this.get("minZoom")||0)||(null===(_b=this.getMap())||void 0===_b?void 0:_b.getZoom())===this.get("maxZoom"))&&google.maps.event.trigger(this,"idle")},Clusterer.prototype.onIdle=function(){this.redraw()},Clusterer.prototype.onAdd=function(){var map=this.getMap();this.activeMap=map,this.ready=!0,this.repaint(),null!==map&&(this.listeners=[google.maps.event.addListener(map,"zoom_changed",this.onZoomChanged),google.maps.event.addListener(map,"idle",this.onIdle)])},Clusterer.prototype.onRemove=function(){for(var i=0;i<this.markers.length;i++)this.markers[i].getMap()!==this.activeMap&&this.markers[i].setMap(this.activeMap);for(var i=0;i<this.clusters.length;i++)this.clusters[i].remove();this.clusters=[];for(var i=0;i<this.listeners.length;i++)google.maps.event.removeListener(this.listeners[i]);this.listeners=[],this.activeMap=null,this.ready=!1},Clusterer.prototype.draw=function(){},Clusterer.prototype.setupStyles=function(){if(!(this.styles.length>0))for(var i=0;i<this.imageSizes.length;i++)this.styles.push({url:"".concat(this.imagePath+(i+1),".").concat(this.imageExtension),height:this.imageSizes[i],width:this.imageSizes[i]})},Clusterer.prototype.fitMapToMarkers=function(){for(var markers=this.getMarkers(),bounds=new google.maps.LatLngBounds,i=0;i<markers.length;i++){var position=markers[i].getPosition();position&&bounds.extend(position)}var map=this.getMap();null!==map&&"fitBounds"in map&&map.fitBounds(bounds)},Clusterer.prototype.getGridSize=function(){return this.gridSize},Clusterer.prototype.setGridSize=function(gridSize){this.gridSize=gridSize},Clusterer.prototype.getMinimumClusterSize=function(){return this.minClusterSize},Clusterer.prototype.setMinimumClusterSize=function(minimumClusterSize){this.minClusterSize=minimumClusterSize},Clusterer.prototype.getMaxZoom=function(){return this.maxZoom},Clusterer.prototype.setMaxZoom=function(maxZoom){this.maxZoom=maxZoom},Clusterer.prototype.getStyles=function(){return this.styles},Clusterer.prototype.setStyles=function(styles){this.styles=styles},Clusterer.prototype.getTitle=function(){return this.title},Clusterer.prototype.setTitle=function(title){this.title=title},Clusterer.prototype.getZoomOnClick=function(){return this.zoomOnClick},Clusterer.prototype.setZoomOnClick=function(zoomOnClick){this.zoomOnClick=zoomOnClick},Clusterer.prototype.getAverageCenter=function(){return this.averageCenter},Clusterer.prototype.setAverageCenter=function(averageCenter){this.averageCenter=averageCenter},Clusterer.prototype.getIgnoreHidden=function(){return this.ignoreHidden},Clusterer.prototype.setIgnoreHidden=function(ignoreHidden){this.ignoreHidden=ignoreHidden},Clusterer.prototype.getEnableRetinaIcons=function(){return this.enableRetinaIcons},Clusterer.prototype.setEnableRetinaIcons=function(enableRetinaIcons){this.enableRetinaIcons=enableRetinaIcons},Clusterer.prototype.getImageExtension=function(){return this.imageExtension},Clusterer.prototype.setImageExtension=function(imageExtension){this.imageExtension=imageExtension},Clusterer.prototype.getImagePath=function(){return this.imagePath},Clusterer.prototype.setImagePath=function(imagePath){this.imagePath=imagePath},Clusterer.prototype.getImageSizes=function(){return this.imageSizes},Clusterer.prototype.setImageSizes=function(imageSizes){this.imageSizes=imageSizes},Clusterer.prototype.getCalculator=function(){return this.calculator},Clusterer.prototype.setCalculator=function(calculator){this.calculator=calculator},Clusterer.prototype.getBatchSizeIE=function(){return this.batchSizeIE},Clusterer.prototype.setBatchSizeIE=function(batchSizeIE){this.batchSizeIE=batchSizeIE},Clusterer.prototype.getClusterClass=function(){return this.clusterClass},Clusterer.prototype.setClusterClass=function(clusterClass){this.clusterClass=clusterClass},Clusterer.prototype.getMarkers=function(){return this.markers},Clusterer.prototype.getTotalMarkers=function(){return this.markers.length},Clusterer.prototype.getClusters=function(){return this.clusters},Clusterer.prototype.getTotalClusters=function(){return this.clusters.length},Clusterer.prototype.addMarker=function(marker,optNoDraw){this.pushMarkerTo(marker),optNoDraw||this.redraw()},Clusterer.prototype.addMarkers=function(markers,optNoDraw){for(var key in markers)Object.prototype.hasOwnProperty.call(markers,key)&&this.pushMarkerTo(markers[key]);optNoDraw||this.redraw()},Clusterer.prototype.pushMarkerTo=function(marker){var _this=this;marker.getDraggable()&&google.maps.event.addListener(marker,"dragend",function(){_this.ready&&(marker.isAdded=!1,_this.repaint())}),marker.isAdded=!1,this.markers.push(marker)},Clusterer.prototype.removeMarker_=function(marker){var index=-1;if(this.markers.indexOf)index=this.markers.indexOf(marker);else for(var i=0;i<this.markers.length;i++)if(marker===this.markers[i]){index=i;break}return -1!==index&&(marker.setMap(null),this.markers.splice(index,1),!0)},Clusterer.prototype.removeMarker=function(marker,optNoDraw){var removed=this.removeMarker_(marker);return!optNoDraw&&removed&&this.repaint(),removed},Clusterer.prototype.removeMarkers=function(markers,optNoDraw){for(var removed=!1,i=0;i<markers.length;i++)removed=removed||this.removeMarker_(markers[i]);return!optNoDraw&&removed&&this.repaint(),removed},Clusterer.prototype.clearMarkers=function(){this.resetViewport(!0),this.markers=[]},Clusterer.prototype.repaint=function(){var oldClusters=this.clusters.slice();this.clusters=[],this.resetViewport(!1),this.redraw(),setTimeout(function(){for(var i=0;i<oldClusters.length;i++)oldClusters[i].remove()},0)},Clusterer.prototype.getExtendedBounds=function(bounds){var projection=this.getProjection(),trPix=projection.fromLatLngToDivPixel(new google.maps.LatLng(bounds.getNorthEast().lat(),bounds.getNorthEast().lng()));null!==trPix&&(trPix.x+=this.gridSize,trPix.y-=this.gridSize);var blPix=projection.fromLatLngToDivPixel(new google.maps.LatLng(bounds.getSouthWest().lat(),bounds.getSouthWest().lng()));if(null!==blPix&&(blPix.x-=this.gridSize,blPix.y+=this.gridSize),null!==trPix){var point1=projection.fromDivPixelToLatLng(trPix);null!==point1&&bounds.extend(point1)}if(null!==blPix){var point2=projection.fromDivPixelToLatLng(blPix);null!==point2&&bounds.extend(point2)}return bounds},Clusterer.prototype.redraw=function(){this.createClusters(0)},Clusterer.prototype.resetViewport=function(optHide){for(var i=0;i<this.clusters.length;i++)this.clusters[i].remove();this.clusters=[];for(var i=0;i<this.markers.length;i++){var marker=this.markers[i];marker.isAdded=!1,optHide&&marker.setMap(null)}},Clusterer.prototype.distanceBetweenPoints=function(p1,p2){var dLat=(p2.lat()-p1.lat())*Math.PI/180,dLon=(p2.lng()-p1.lng())*Math.PI/180,a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(p1.lat()*Math.PI/180)*Math.cos(p2.lat()*Math.PI/180)*Math.sin(dLon/2)*Math.sin(dLon/2);return 6371*(2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a)))},Clusterer.prototype.isMarkerInBounds=function(marker,bounds){var position=marker.getPosition();return!!position&&bounds.contains(position)},Clusterer.prototype.addToClosestCluster=function(marker){for(var cluster,distance=4e4,clusterToAddTo=null,i=0;i<this.clusters.length;i++){var center=(cluster=this.clusters[i]).getCenter(),position=marker.getPosition();if(center&&position){var d=this.distanceBetweenPoints(center,position);d<distance&&(distance=d,clusterToAddTo=cluster)}}clusterToAddTo&&clusterToAddTo.isMarkerInClusterBounds(marker)?clusterToAddTo.addMarker(marker):((cluster=new Cluster$1(this)).addMarker(marker),this.clusters.push(cluster))},Clusterer.prototype.createClusters=function(iFirst){var _this=this;if(this.ready){0===iFirst&&(google.maps.event.trigger(this,"clusteringbegin",this),null!==this.timerRefStatic&&(window.clearTimeout(this.timerRefStatic),delete this.timerRefStatic));for(var map=this.getMap(),bounds=null!==map&&("getBounds"in map)?map.getBounds():null,mapBounds=((null==map?void 0:map.getZoom())||0)>3?new google.maps.LatLngBounds(null==bounds?void 0:bounds.getSouthWest(),null==bounds?void 0:bounds.getNorthEast()):new google.maps.LatLngBounds(new google.maps.LatLng(85.02070771743472,-178.48388434375),new google.maps.LatLng(-85.08136444384544,178.00048865625)),extendedMapBounds=this.getExtendedBounds(mapBounds),iLast=Math.min(iFirst+this.batchSize,this.markers.length),i=iFirst;i<iLast;i++){var marker=this.markers[i];!marker.isAdded&&this.isMarkerInBounds(marker,extendedMapBounds)&&(!this.ignoreHidden||this.ignoreHidden&&marker.getVisible())&&this.addToClosestCluster(marker)}if(iLast<this.markers.length)this.timerRefStatic=window.setTimeout(function(){_this.createClusters(iLast)},0);else{this.timerRefStatic=null,google.maps.event.trigger(this,"clusteringend",this);for(var i=0;i<this.clusters.length;i++)this.clusters[i].updateIcon()}}},Clusterer.prototype.extend=function(obj1,obj2){return(function(object){for(var property in object.prototype)this.prototype[property]=object.prototype[property];return this}).apply(obj1,[obj2])},Clusterer}();let eventMap$e={onClick:"click",onClusteringBegin:"clusteringbegin",onClusteringEnd:"clusteringend",onMouseOut:"mouseout",onMouseOver:"mouseover"},updaterMap$e={averageCenter(instance,averageCenter){instance.setAverageCenter(averageCenter)},batchSizeIE(instance,batchSizeIE){instance.setBatchSizeIE(batchSizeIE)},calculator(instance,calculator){instance.setCalculator(calculator)},clusterClass(instance,clusterClass){instance.setClusterClass(clusterClass)},enableRetinaIcons(instance,enableRetinaIcons){instance.setEnableRetinaIcons(enableRetinaIcons)},gridSize(instance,gridSize){instance.setGridSize(gridSize)},ignoreHidden(instance,ignoreHidden){instance.setIgnoreHidden(ignoreHidden)},imageExtension(instance,imageExtension){instance.setImageExtension(imageExtension)},imagePath(instance,imagePath){instance.setImagePath(imagePath)},imageSizes(instance,imageSizes){instance.setImageSizes(imageSizes)},maxZoom(instance,maxZoom){instance.setMaxZoom(maxZoom)},minimumClusterSize(instance,minimumClusterSize){instance.setMinimumClusterSize(minimumClusterSize)},styles(instance,styles){instance.setStyles(styles)},title(instance,title){instance.setTitle(title)},zoomOnClick(instance,zoomOnClick){instance.setZoomOnClick(zoomOnClick)}},defaultOptions$4={};(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function(props){let{children,options,averageCenter,batchSizeIE,calculator,clusterClass,enableRetinaIcons,gridSize,ignoreHidden,imageExtension,imagePath,imageSizes,maxZoom,minimumClusterSize,styles,title,zoomOnClick,onClick,onClusteringBegin,onClusteringEnd,onMouseOver,onMouseOut,onLoad,onUnmount}=props,[instance,setInstance]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),map=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MapContext),[clickListener,setClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[clusteringBeginListener,setClusteringBeginListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[clusteringEndListener,setClusteringEndListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseoutListener,setMouseoutListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseoverListener,setMouseoverListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseOut&&(null!==mouseoutListener&&google.maps.event.removeListener(mouseoutListener),setMouseoutListener(google.maps.event.addListener(instance,eventMap$e.onMouseOut,onMouseOut)))},[onMouseOut]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseOver&&(null!==mouseoverListener&&google.maps.event.removeListener(mouseoverListener),setMouseoverListener(google.maps.event.addListener(instance,eventMap$e.onMouseOver,onMouseOver)))},[onMouseOver]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onClick&&(null!==clickListener&&google.maps.event.removeListener(clickListener),setClickListener(google.maps.event.addListener(instance,eventMap$e.onClick,onClick)))},[onClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onClusteringBegin&&(null!==clusteringBeginListener&&google.maps.event.removeListener(clusteringBeginListener),setClusteringBeginListener(google.maps.event.addListener(instance,eventMap$e.onClusteringBegin,onClusteringBegin)))},[onClusteringBegin]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onClusteringEnd&&(null!==clusteringEndListener&&google.maps.event.removeListener(clusteringEndListener),setClusteringBeginListener(google.maps.event.addListener(instance,eventMap$e.onClusteringEnd,onClusteringEnd)))},[onClusteringEnd]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==averageCenter&&null!==instance&&updaterMap$e.averageCenter(instance,averageCenter)},[instance,averageCenter]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==batchSizeIE&&null!==instance&&updaterMap$e.batchSizeIE(instance,batchSizeIE)},[instance,batchSizeIE]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==calculator&&null!==instance&&updaterMap$e.calculator(instance,calculator)},[instance,calculator]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==clusterClass&&null!==instance&&updaterMap$e.clusterClass(instance,clusterClass)},[instance,clusterClass]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==enableRetinaIcons&&null!==instance&&updaterMap$e.enableRetinaIcons(instance,enableRetinaIcons)},[instance,enableRetinaIcons]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==gridSize&&null!==instance&&updaterMap$e.gridSize(instance,gridSize)},[instance,gridSize]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==ignoreHidden&&null!==instance&&updaterMap$e.ignoreHidden(instance,ignoreHidden)},[instance,ignoreHidden]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==imageExtension&&null!==instance&&updaterMap$e.imageExtension(instance,imageExtension)},[instance,imageExtension]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==imagePath&&null!==instance&&updaterMap$e.imagePath(instance,imagePath)},[instance,imagePath]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==imageSizes&&null!==instance&&updaterMap$e.imageSizes(instance,imageSizes)},[instance,imageSizes]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==maxZoom&&null!==instance&&updaterMap$e.maxZoom(instance,maxZoom)},[instance,maxZoom]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==minimumClusterSize&&null!==instance&&updaterMap$e.minimumClusterSize(instance,minimumClusterSize)},[instance,minimumClusterSize]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==styles&&null!==instance&&updaterMap$e.styles(instance,styles)},[instance,styles]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==title&&null!==instance&&updaterMap$e.title(instance,title)},[instance,title]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==zoomOnClick&&null!==instance&&updaterMap$e.zoomOnClick(instance,zoomOnClick)},[instance,zoomOnClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{if(!map)return;let clustererOptions=Object.assign({},options||defaultOptions$4),clusterer=new Clusterer(map,[],clustererOptions);return averageCenter&&updaterMap$e.averageCenter(clusterer,averageCenter),batchSizeIE&&updaterMap$e.batchSizeIE(clusterer,batchSizeIE),calculator&&updaterMap$e.calculator(clusterer,calculator),clusterClass&&updaterMap$e.clusterClass(clusterer,clusterClass),enableRetinaIcons&&updaterMap$e.enableRetinaIcons(clusterer,enableRetinaIcons),gridSize&&updaterMap$e.gridSize(clusterer,gridSize),ignoreHidden&&updaterMap$e.ignoreHidden(clusterer,ignoreHidden),imageExtension&&updaterMap$e.imageExtension(clusterer,imageExtension),imagePath&&updaterMap$e.imagePath(clusterer,imagePath),imageSizes&&updaterMap$e.imageSizes(clusterer,imageSizes),maxZoom&&updaterMap$e.maxZoom(clusterer,maxZoom),minimumClusterSize&&updaterMap$e.minimumClusterSize(clusterer,minimumClusterSize),styles&&updaterMap$e.styles(clusterer,styles),title&&updaterMap$e.title(clusterer,title),zoomOnClick&&updaterMap$e.zoomOnClick(clusterer,zoomOnClick),onMouseOut&&setMouseoutListener(google.maps.event.addListener(clusterer,eventMap$e.onMouseOut,onMouseOut)),onMouseOver&&setMouseoverListener(google.maps.event.addListener(clusterer,eventMap$e.onMouseOver,onMouseOver)),onClick&&setClickListener(google.maps.event.addListener(clusterer,eventMap$e.onClick,onClick)),onClusteringBegin&&setClusteringBeginListener(google.maps.event.addListener(clusterer,eventMap$e.onClusteringBegin,onClusteringBegin)),onClusteringEnd&&setClusteringEndListener(google.maps.event.addListener(clusterer,eventMap$e.onClusteringEnd,onClusteringEnd)),setInstance(clusterer),onLoad&&onLoad(clusterer),()=>{null!==mouseoutListener&&google.maps.event.removeListener(mouseoutListener),null!==mouseoverListener&&google.maps.event.removeListener(mouseoverListener),null!==clickListener&&google.maps.event.removeListener(clickListener),null!==clusteringBeginListener&&google.maps.event.removeListener(clusteringBeginListener),null!==clusteringEndListener&&google.maps.event.removeListener(clusteringEndListener),onUnmount&&onUnmount(clusterer)}},[]),null!==instance&&children(instance)||null});class ClustererComponent extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.registeredEvents=[],this.state={markerClusterer:null},this.setClustererCallback=()=>{null!==this.state.markerClusterer&&this.props.onLoad&&this.props.onLoad(this.state.markerClusterer)}}componentDidMount(){if(this.context){let markerClusterer=new Clusterer(this.context,[],this.props.options);this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$e,eventMap:eventMap$e,prevProps:{},nextProps:this.props,instance:markerClusterer}),this.setState(()=>({markerClusterer}),this.setClustererCallback)}}componentDidUpdate(prevProps){this.state.markerClusterer&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$e,eventMap:eventMap$e,prevProps,nextProps:this.props,instance:this.state.markerClusterer}))}componentWillUnmount(){null!==this.state.markerClusterer&&(this.props.onUnmount&&this.props.onUnmount(this.state.markerClusterer),unregisterEvents(this.registeredEvents),this.state.markerClusterer.setMap(null))}render(){return null!==this.state.markerClusterer?this.props.children(this.state.markerClusterer):null}}function cancelHandler(event){event.cancelBubble=!0,event.stopPropagation&&event.stopPropagation()}ClustererComponent.contextType=MapContext;var InfoBox=function(){function InfoBox(options){void 0===options&&(options={}),this.getCloseClickHandler=this.getCloseClickHandler.bind(this),this.closeClickHandler=this.closeClickHandler.bind(this),this.createInfoBoxDiv=this.createInfoBoxDiv.bind(this),this.addClickHandler=this.addClickHandler.bind(this),this.getCloseBoxImg=this.getCloseBoxImg.bind(this),this.getBoxWidths=this.getBoxWidths.bind(this),this.setBoxStyle=this.setBoxStyle.bind(this),this.setPosition=this.setPosition.bind(this),this.getPosition=this.getPosition.bind(this),this.setOptions=this.setOptions.bind(this),this.setContent=this.setContent.bind(this),this.setVisible=this.setVisible.bind(this),this.getContent=this.getContent.bind(this),this.getVisible=this.getVisible.bind(this),this.setZIndex=this.setZIndex.bind(this),this.getZIndex=this.getZIndex.bind(this),this.onRemove=this.onRemove.bind(this),this.panBox=this.panBox.bind(this),this.extend=this.extend.bind(this),this.close=this.close.bind(this),this.draw=this.draw.bind(this),this.show=this.show.bind(this),this.hide=this.hide.bind(this),this.open=this.open.bind(this),this.extend(InfoBox,google.maps.OverlayView),this.content=options.content||"",this.disableAutoPan=options.disableAutoPan||!1,this.maxWidth=options.maxWidth||0,this.pixelOffset=options.pixelOffset||new google.maps.Size(0,0),this.position=options.position||new google.maps.LatLng(0,0),this.zIndex=options.zIndex||null,this.boxClass=options.boxClass||"infoBox",this.boxStyle=options.boxStyle||{},this.closeBoxMargin=options.closeBoxMargin||"2px",this.closeBoxURL=options.closeBoxURL||"http://www.google.com/intl/en_us/mapfiles/close.gif",""===options.closeBoxURL&&(this.closeBoxURL=""),this.infoBoxClearance=options.infoBoxClearance||new google.maps.Size(1,1),void 0===options.visible&&(void 0===options.isHidden?options.visible=!0:options.visible=!options.isHidden),this.isHidden=!options.visible,this.alignBottom=options.alignBottom||!1,this.pane=options.pane||"floatPane",this.enableEventPropagation=options.enableEventPropagation||!1,this.div=null,this.closeListener=null,this.moveListener=null,this.mapListener=null,this.contextListener=null,this.eventListeners=null,this.fixedWidthSet=null}return InfoBox.prototype.createInfoBoxDiv=function(){var _this=this;if(!this.div){this.div=document.createElement("div"),this.setBoxStyle(),"string"==typeof this.content?this.div.innerHTML=this.getCloseBoxImg()+this.content:(this.div.innerHTML=this.getCloseBoxImg(),this.div.appendChild(this.content));var panes=this.getPanes();if(null!==panes&&panes[this.pane].appendChild(this.div),this.addClickHandler(),this.div.style.width)this.fixedWidthSet=!0;else if(0!==this.maxWidth&&this.div.offsetWidth>this.maxWidth)this.div.style.width=this.maxWidth+"px",this.fixedWidthSet=!0;else{var bw=this.getBoxWidths();this.div.style.width=this.div.offsetWidth-bw.left-bw.right+"px",this.fixedWidthSet=!1}if(this.panBox(this.disableAutoPan),!this.enableEventPropagation){this.eventListeners=[];for(var events=["mousedown","mouseover","mouseout","mouseup","click","dblclick","touchstart","touchend","touchmove"],i=0;i<events.length;i++)this.eventListeners.push(google.maps.event.addListener(this.div,events[i],cancelHandler));this.eventListeners.push(google.maps.event.addListener(this.div,"mouseover",function(){_this.div&&(_this.div.style.cursor="default")}))}this.contextListener=google.maps.event.addListener(this.div,"contextmenu",function(event){event.returnValue=!1,event.preventDefault&&event.preventDefault(),_this.enableEventPropagation||cancelHandler(event)}),google.maps.event.trigger(this,"domready")}},InfoBox.prototype.getCloseBoxImg=function(){var img="";return""!==this.closeBoxURL&&(img='<img alt="" aria-hidden="true" src=\''+this.closeBoxURL+"' align=right style=' position: relative; cursor: pointer; margin: "+this.closeBoxMargin+";'>"),img},InfoBox.prototype.addClickHandler=function(){this.closeListener=this.div&&this.div.firstChild&&""!==this.closeBoxURL?google.maps.event.addListener(this.div.firstChild,"click",this.getCloseClickHandler()):null},InfoBox.prototype.closeClickHandler=function(event){event.cancelBubble=!0,event.stopPropagation&&event.stopPropagation(),google.maps.event.trigger(this,"closeclick"),this.close()},InfoBox.prototype.getCloseClickHandler=function(){return this.closeClickHandler},InfoBox.prototype.panBox=function(disablePan){if(this.div&&!disablePan){var map=this.getMap();if(map instanceof google.maps.Map){var xOffset=0,yOffset=0,bounds=map.getBounds();bounds&&!bounds.contains(this.position)&&map.setCenter(this.position);var mapDiv=map.getDiv(),mapWidth=mapDiv.offsetWidth,mapHeight=mapDiv.offsetHeight,iwOffsetX=this.pixelOffset.width,iwOffsetY=this.pixelOffset.height,iwWidth=this.div.offsetWidth,iwHeight=this.div.offsetHeight,padX=this.infoBoxClearance.width,padY=this.infoBoxClearance.height,pixPosition=this.getProjection().fromLatLngToContainerPixel(this.position);null!==pixPosition&&(pixPosition.x<-iwOffsetX+padX?xOffset=pixPosition.x+iwOffsetX-padX:pixPosition.x+iwWidth+iwOffsetX+padX>mapWidth&&(xOffset=pixPosition.x+iwWidth+iwOffsetX+padX-mapWidth),this.alignBottom?pixPosition.y<-iwOffsetY+padY+iwHeight?yOffset=pixPosition.y+iwOffsetY-padY-iwHeight:pixPosition.y+iwOffsetY+padY>mapHeight&&(yOffset=pixPosition.y+iwOffsetY+padY-mapHeight):pixPosition.y<-iwOffsetY+padY?yOffset=pixPosition.y+iwOffsetY-padY:pixPosition.y+iwHeight+iwOffsetY+padY>mapHeight&&(yOffset=pixPosition.y+iwHeight+iwOffsetY+padY-mapHeight)),0===xOffset&&0===yOffset||map.panBy(xOffset,yOffset)}}},InfoBox.prototype.setBoxStyle=function(){if(this.div){this.div.className=this.boxClass,this.div.style.cssText="";var boxStyle=this.boxStyle;for(var i in boxStyle)Object.prototype.hasOwnProperty.call(boxStyle,i)&&(this.div.style[i]=boxStyle[i]);if(this.div.style.webkitTransform="translateZ(0)",void 0!==this.div.style.opacity&&""!==this.div.style.opacity){var opacity=parseFloat(this.div.style.opacity||"");this.div.style.msFilter='"progid:DXImageTransform.Microsoft.Alpha(Opacity='+100*opacity+')"',this.div.style.filter="alpha(opacity="+100*opacity+")"}this.div.style.position="absolute",this.div.style.visibility="hidden",null!==this.zIndex&&(this.div.style.zIndex=this.zIndex+""),this.div.style.overflow||(this.div.style.overflow="auto")}},InfoBox.prototype.getBoxWidths=function(){var bw={top:0,bottom:0,left:0,right:0};if(!this.div)return bw;if(document.defaultView){var ownerDocument=this.div.ownerDocument,computedStyle=ownerDocument&&ownerDocument.defaultView?ownerDocument.defaultView.getComputedStyle(this.div,""):null;computedStyle&&(bw.top=parseInt(computedStyle.borderTopWidth||"",10)||0,bw.bottom=parseInt(computedStyle.borderBottomWidth||"",10)||0,bw.left=parseInt(computedStyle.borderLeftWidth||"",10)||0,bw.right=parseInt(computedStyle.borderRightWidth||"",10)||0)}else if(document.documentElement.currentStyle){var currentStyle=this.div.currentStyle;currentStyle&&(bw.top=parseInt(currentStyle.borderTopWidth||"",10)||0,bw.bottom=parseInt(currentStyle.borderBottomWidth||"",10)||0,bw.left=parseInt(currentStyle.borderLeftWidth||"",10)||0,bw.right=parseInt(currentStyle.borderRightWidth||"",10)||0)}return bw},InfoBox.prototype.onRemove=function(){this.div&&this.div.parentNode&&(this.div.parentNode.removeChild(this.div),this.div=null)},InfoBox.prototype.draw=function(){if(this.createInfoBoxDiv(),this.div){var pixPosition=this.getProjection().fromLatLngToDivPixel(this.position);null!==pixPosition&&(this.div.style.left=pixPosition.x+this.pixelOffset.width+"px",this.alignBottom?this.div.style.bottom=-(pixPosition.y+this.pixelOffset.height)+"px":this.div.style.top=pixPosition.y+this.pixelOffset.height+"px"),this.isHidden?this.div.style.visibility="hidden":this.div.style.visibility="visible"}},InfoBox.prototype.setOptions=function(options){void 0===options&&(options={}),void 0!==options.boxClass&&(this.boxClass=options.boxClass,this.setBoxStyle()),void 0!==options.boxStyle&&(this.boxStyle=options.boxStyle,this.setBoxStyle()),void 0!==options.content&&this.setContent(options.content),void 0!==options.disableAutoPan&&(this.disableAutoPan=options.disableAutoPan),void 0!==options.maxWidth&&(this.maxWidth=options.maxWidth),void 0!==options.pixelOffset&&(this.pixelOffset=options.pixelOffset),void 0!==options.alignBottom&&(this.alignBottom=options.alignBottom),void 0!==options.position&&this.setPosition(options.position),void 0!==options.zIndex&&this.setZIndex(options.zIndex),void 0!==options.closeBoxMargin&&(this.closeBoxMargin=options.closeBoxMargin),void 0!==options.closeBoxURL&&(this.closeBoxURL=options.closeBoxURL),void 0!==options.infoBoxClearance&&(this.infoBoxClearance=options.infoBoxClearance),void 0!==options.isHidden&&(this.isHidden=options.isHidden),void 0!==options.visible&&(this.isHidden=!options.visible),void 0!==options.enableEventPropagation&&(this.enableEventPropagation=options.enableEventPropagation),this.div&&this.draw()},InfoBox.prototype.setContent=function(content){this.content=content,this.div&&(this.closeListener&&(google.maps.event.removeListener(this.closeListener),this.closeListener=null),this.fixedWidthSet||(this.div.style.width=""),"string"==typeof content?this.div.innerHTML=this.getCloseBoxImg()+content:(this.div.innerHTML=this.getCloseBoxImg(),this.div.appendChild(content)),this.fixedWidthSet||(this.div.style.width=this.div.offsetWidth+"px","string"==typeof content?this.div.innerHTML=this.getCloseBoxImg()+content:(this.div.innerHTML=this.getCloseBoxImg(),this.div.appendChild(content))),this.addClickHandler()),google.maps.event.trigger(this,"content_changed")},InfoBox.prototype.setPosition=function(latLng){this.position=latLng,this.div&&this.draw(),google.maps.event.trigger(this,"position_changed")},InfoBox.prototype.setVisible=function(isVisible){this.isHidden=!isVisible,this.div&&(this.div.style.visibility=this.isHidden?"hidden":"visible")},InfoBox.prototype.setZIndex=function(index){this.zIndex=index,this.div&&(this.div.style.zIndex=index+""),google.maps.event.trigger(this,"zindex_changed")},InfoBox.prototype.getContent=function(){return this.content},InfoBox.prototype.getPosition=function(){return this.position},InfoBox.prototype.getZIndex=function(){return this.zIndex},InfoBox.prototype.getVisible=function(){return null!=this.getMap()&&!this.isHidden},InfoBox.prototype.show=function(){this.isHidden=!1,this.div&&(this.div.style.visibility="visible")},InfoBox.prototype.hide=function(){this.isHidden=!0,this.div&&(this.div.style.visibility="hidden")},InfoBox.prototype.open=function(map,anchor){var _this=this;anchor&&(this.position=anchor.getPosition(),this.moveListener=google.maps.event.addListener(anchor,"position_changed",function(){var position=anchor.getPosition();_this.setPosition(position)}),this.mapListener=google.maps.event.addListener(anchor,"map_changed",function(){_this.setMap(anchor.map)})),this.setMap(map),this.div&&this.panBox()},InfoBox.prototype.close=function(){if(this.closeListener&&(google.maps.event.removeListener(this.closeListener),this.closeListener=null),this.eventListeners){for(var i=0;i<this.eventListeners.length;i++)google.maps.event.removeListener(this.eventListeners[i]);this.eventListeners=null}this.moveListener&&(google.maps.event.removeListener(this.moveListener),this.moveListener=null),this.mapListener&&(google.maps.event.removeListener(this.mapListener),this.mapListener=null),this.contextListener&&(google.maps.event.removeListener(this.contextListener),this.contextListener=null),this.setMap(null)},InfoBox.prototype.extend=function(obj1,obj2){return(function(object){for(var property in object.prototype)Object.prototype.hasOwnProperty.call(this,property)||(this.prototype[property]=object.prototype[property]);return this}).apply(obj1,[obj2])},InfoBox}();let eventMap$d={onCloseClick:"closeclick",onContentChanged:"content_changed",onDomReady:"domready",onPositionChanged:"position_changed",onZindexChanged:"zindex_changed"},updaterMap$d={options(instance,options){instance.setOptions(options)},position(instance,position){position instanceof google.maps.LatLng?instance.setPosition(position):instance.setPosition(new google.maps.LatLng(position.lat,position.lng))},visible(instance,visible){instance.setVisible(visible)},zIndex(instance,zIndex){instance.setZIndex(zIndex)}},defaultOptions$3={};(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function({children,anchor,options,position,zIndex,onCloseClick,onDomReady,onContentChanged,onPositionChanged,onZindexChanged,onLoad,onUnmount}){let map=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MapContext),[instance,setInstance]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[closeclickListener,setCloseClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[domreadyclickListener,setDomReadyClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[contentchangedclickListener,setContentChangedClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[positionchangedclickListener,setPositionChangedClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[zindexchangedclickListener,setZindexChangedClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),containerElementRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{map&&null!==instance&&(instance.close(),anchor?instance.open(map,anchor):instance.getPosition()&&instance.open(map))},[map,instance,anchor]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{options&&null!==instance&&instance.setOptions(options)},[instance,options]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{if(position&&null!==instance){let positionLatLng=position instanceof google.maps.LatLng?position:new google.maps.LatLng(position.lat,position.lng);instance.setPosition(positionLatLng)}},[position]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{"number"==typeof zIndex&&null!==instance&&instance.setZIndex(zIndex)},[zIndex]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onCloseClick&&(null!==closeclickListener&&google.maps.event.removeListener(closeclickListener),setCloseClickListener(google.maps.event.addListener(instance,"closeclick",onCloseClick)))},[onCloseClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDomReady&&(null!==domreadyclickListener&&google.maps.event.removeListener(domreadyclickListener),setDomReadyClickListener(google.maps.event.addListener(instance,"domready",onDomReady)))},[onDomReady]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onContentChanged&&(null!==contentchangedclickListener&&google.maps.event.removeListener(contentchangedclickListener),setContentChangedClickListener(google.maps.event.addListener(instance,"content_changed",onContentChanged)))},[onContentChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onPositionChanged&&(null!==positionchangedclickListener&&google.maps.event.removeListener(positionchangedclickListener),setPositionChangedClickListener(google.maps.event.addListener(instance,"position_changed",onPositionChanged)))},[onPositionChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onZindexChanged&&(null!==zindexchangedclickListener&&google.maps.event.removeListener(zindexchangedclickListener),setZindexChangedClickListener(google.maps.event.addListener(instance,"zindex_changed",onZindexChanged)))},[onZindexChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{if(map){let positionLatLng;let _a=options||defaultOptions$3,{position}=_a,infoBoxOptions=__rest$1(_a,["position"]);!position||position instanceof google.maps.LatLng||(positionLatLng=new google.maps.LatLng(position.lat,position.lng));let infoBox=new InfoBox(Object.assign(Object.assign({},infoBoxOptions),positionLatLng?{position:positionLatLng}:{}));containerElementRef.current=document.createElement("div"),setInstance(infoBox),onCloseClick&&setCloseClickListener(google.maps.event.addListener(infoBox,"closeclick",onCloseClick)),onDomReady&&setDomReadyClickListener(google.maps.event.addListener(infoBox,"domready",onDomReady)),onContentChanged&&setContentChangedClickListener(google.maps.event.addListener(infoBox,"content_changed",onContentChanged)),onPositionChanged&&setPositionChangedClickListener(google.maps.event.addListener(infoBox,"position_changed",onPositionChanged)),onZindexChanged&&setZindexChangedClickListener(google.maps.event.addListener(infoBox,"zindex_changed",onZindexChanged)),infoBox.setContent(containerElementRef.current),anchor?infoBox.open(map,anchor):infoBox.getPosition()?infoBox.open(map):invariant_1(!1,"You must provide either an anchor or a position prop for <InfoBox>."),onLoad&&onLoad(infoBox)}return()=>{null!==instance&&(closeclickListener&&google.maps.event.removeListener(closeclickListener),contentchangedclickListener&&google.maps.event.removeListener(contentchangedclickListener),domreadyclickListener&&google.maps.event.removeListener(domreadyclickListener),positionchangedclickListener&&google.maps.event.removeListener(positionchangedclickListener),zindexchangedclickListener&&google.maps.event.removeListener(zindexchangedclickListener),onUnmount&&onUnmount(instance),instance.close())}},[]),containerElementRef.current?(0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(react__WEBPACK_IMPORTED_MODULE_0__.Children.only(children),containerElementRef.current):null});class InfoBoxComponent extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.registeredEvents=[],this.containerElement=null,this.state={infoBox:null},this.open=(infoBox,anchor)=>{anchor?infoBox.open(this.context,anchor):infoBox.getPosition()?infoBox.open(this.context):invariant_1(!1,"You must provide either an anchor or a position prop for <InfoBox>.")},this.setInfoBoxCallback=()=>{null!==this.state.infoBox&&null!==this.containerElement&&(this.state.infoBox.setContent(this.containerElement),this.open(this.state.infoBox,this.props.anchor),this.props.onLoad&&this.props.onLoad(this.state.infoBox))}}componentDidMount(){let positionLatLng;let _a=this.props.options||{},{position}=_a,infoBoxOptions=__rest$1(_a,["position"]);!position||position instanceof google.maps.LatLng||(positionLatLng=new google.maps.LatLng(position.lat,position.lng));let infoBox=new InfoBox(Object.assign(Object.assign({},infoBoxOptions),positionLatLng?{position:positionLatLng}:{}));this.containerElement=document.createElement("div"),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$d,eventMap:eventMap$d,prevProps:{},nextProps:this.props,instance:infoBox}),this.setState({infoBox},this.setInfoBoxCallback)}componentDidUpdate(prevProps){let{infoBox}=this.state;null!==infoBox&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$d,eventMap:eventMap$d,prevProps,nextProps:this.props,instance:infoBox}))}componentWillUnmount(){let{onUnmount}=this.props,{infoBox}=this.state;null!==infoBox&&(onUnmount&&onUnmount(infoBox),unregisterEvents(this.registeredEvents),infoBox.close())}render(){return this.containerElement?(0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(react__WEBPACK_IMPORTED_MODULE_0__.Children.only(this.props.children),this.containerElement):null}}InfoBoxComponent.contextType=MapContext;var fastDeepEqual=function equal(a,b){if(a===b)return!0;if(a&&b&&"object"==typeof a&&"object"==typeof b){if(a.constructor!==b.constructor)return!1;if(Array.isArray(a)){if((length=a.length)!=b.length)return!1;for(i=length;0!=i--;)if(!equal(a[i],b[i]))return!1;return!0}if(a.constructor===RegExp)return a.source===b.source&&a.flags===b.flags;if(a.valueOf!==Object.prototype.valueOf)return a.valueOf()===b.valueOf();if(a.toString!==Object.prototype.toString)return a.toString()===b.toString();if((length=(keys=Object.keys(a)).length)!==Object.keys(b).length)return!1;for(i=length;0!=i--;)if(!Object.prototype.hasOwnProperty.call(b,keys[i]))return!1;for(i=length;0!=i--;){var length,i,keys,key=keys[i];if(!equal(a[key],b[key]))return!1}return!0}return a!=a&&b!=b},kdbush={exports:{}};kdbush.exports=function(){function swapItem(ids,coords,i,j){swap(ids,i,j),swap(coords,2*i,2*j),swap(coords,2*i+1,2*j+1)}function swap(arr,i,j){var tmp=arr[i];arr[i]=arr[j],arr[j]=tmp}function sqDist(ax,ay,bx,by){var dx=ax-bx,dy=ay-by;return dx*dx+dy*dy}var defaultGetX=function(p){return p[0]},defaultGetY=function(p){return p[1]},KDBush=function(points,getX,getY,nodeSize,ArrayType){void 0===getX&&(getX=defaultGetX),void 0===getY&&(getY=defaultGetY),void 0===nodeSize&&(nodeSize=64),void 0===ArrayType&&(ArrayType=Float64Array),this.nodeSize=nodeSize,this.points=points;for(var IndexArrayType=points.length<65536?Uint16Array:Uint32Array,ids=this.ids=new IndexArrayType(points.length),coords=this.coords=new ArrayType(2*points.length),i=0;i<points.length;i++)ids[i]=i,coords[2*i]=getX(points[i]),coords[2*i+1]=getY(points[i]);!function sortKD(ids,coords,nodeSize,left,right,depth){if(!(right-left<=nodeSize)){var m=left+right>>1;(function select(ids,coords,k,left,right,inc){for(;right>left;){if(right-left>600){var n=right-left+1,m=k-left+1,z=Math.log(n),s=.5*Math.exp(2*z/3),sd=.5*Math.sqrt(z*s*(n-s)/n)*(m-n/2<0?-1:1),newLeft=Math.max(left,Math.floor(k-m*s/n+sd)),newRight=Math.min(right,Math.floor(k+(n-m)*s/n+sd));select(ids,coords,k,newLeft,newRight,inc)}var t=coords[2*k+inc],i=left,j=right;for(swapItem(ids,coords,left,k),coords[2*right+inc]>t&&swapItem(ids,coords,left,right);i<j;){for(swapItem(ids,coords,i,j),i++,j--;coords[2*i+inc]<t;)i++;for(;coords[2*j+inc]>t;)j--}coords[2*left+inc]===t?swapItem(ids,coords,left,j):swapItem(ids,coords,++j,right),j<=k&&(left=j+1),k<=j&&(right=j-1)}})(ids,coords,m,left,right,depth%2),sortKD(ids,coords,nodeSize,left,m-1,depth+1),sortKD(ids,coords,nodeSize,m+1,right,depth+1)}}(ids,coords,nodeSize,0,ids.length-1,0)};return KDBush.prototype.range=function(minX,minY,maxX,maxY){return function(ids,coords,minX,minY,maxX,maxY,nodeSize){for(var x,y,stack=[0,ids.length-1,0],result=[];stack.length;){var axis=stack.pop(),right=stack.pop(),left=stack.pop();if(right-left<=nodeSize){for(var i=left;i<=right;i++)x=coords[2*i],y=coords[2*i+1],x>=minX&&x<=maxX&&y>=minY&&y<=maxY&&result.push(ids[i]);continue}var m=Math.floor((left+right)/2);x=coords[2*m],y=coords[2*m+1],x>=minX&&x<=maxX&&y>=minY&&y<=maxY&&result.push(ids[m]);var nextAxis=(axis+1)%2;(0===axis?minX<=x:minY<=y)&&(stack.push(left),stack.push(m-1),stack.push(nextAxis)),(0===axis?maxX>=x:maxY>=y)&&(stack.push(m+1),stack.push(right),stack.push(nextAxis))}return result}(this.ids,this.coords,minX,minY,maxX,maxY,this.nodeSize)},KDBush.prototype.within=function(x,y,r){return function(ids,coords,qx,qy,r,nodeSize){for(var stack=[0,ids.length-1,0],result=[],r2=r*r;stack.length;){var axis=stack.pop(),right=stack.pop(),left=stack.pop();if(right-left<=nodeSize){for(var i=left;i<=right;i++)sqDist(coords[2*i],coords[2*i+1],qx,qy)<=r2&&result.push(ids[i]);continue}var m=Math.floor((left+right)/2),x=coords[2*m],y=coords[2*m+1];sqDist(x,y,qx,qy)<=r2&&result.push(ids[m]);var nextAxis=(axis+1)%2;(0===axis?qx-r<=x:qy-r<=y)&&(stack.push(left),stack.push(m-1),stack.push(nextAxis)),(0===axis?qx+r>=x:qy+r>=y)&&(stack.push(m+1),stack.push(right),stack.push(nextAxis))}return result}(this.ids,this.coords,x,y,r,this.nodeSize)},KDBush}();var KDBush=kdbush.exports;let defaultOptions$2={minZoom:0,maxZoom:16,minPoints:2,radius:40,extent:512,nodeSize:64,log:!1,generateId:!1,reduce:null,map:props=>props},fround=Math.fround||(tmp=new Float32Array(1),x=>(tmp[0]=+x,tmp[0]));class Supercluster{constructor(options){this.options=extend$1(Object.create(defaultOptions$2),options),this.trees=Array(this.options.maxZoom+1)}load(points){let{log,minZoom,maxZoom,nodeSize}=this.options;log&&console.time("total time");let timerId=`prepare ${points.length} points`;log&&console.time(timerId),this.points=points;let clusters=[];for(let i=0;i<points.length;i++)points[i].geometry&&clusters.push(function(p,id){let[x,y]=p.geometry.coordinates;return{x:fround(lngX(x)),y:fround(latY(y)),zoom:1/0,index:id,parentId:-1}}(points[i],i));this.trees[maxZoom+1]=new KDBush(clusters,getX,getY,nodeSize,Float32Array),log&&console.timeEnd(timerId);for(let z=maxZoom;z>=minZoom;z--){let now=+Date.now();clusters=this._cluster(clusters,z),this.trees[z]=new KDBush(clusters,getX,getY,nodeSize,Float32Array),log&&console.log("z%d: %d clusters in %dms",z,clusters.length,+Date.now()-now)}return log&&console.timeEnd("total time"),this}getClusters(bbox,zoom){let minLng=((bbox[0]+180)%360+360)%360-180,minLat=Math.max(-90,Math.min(90,bbox[1])),maxLng=180===bbox[2]?180:((bbox[2]+180)%360+360)%360-180,maxLat=Math.max(-90,Math.min(90,bbox[3]));if(bbox[2]-bbox[0]>=360)minLng=-180,maxLng=180;else if(minLng>maxLng){let easternHem=this.getClusters([minLng,minLat,180,maxLat],zoom),westernHem=this.getClusters([-180,minLat,maxLng,maxLat],zoom);return easternHem.concat(westernHem)}let tree=this.trees[this._limitZoom(zoom)],ids=tree.range(lngX(minLng),latY(maxLat),lngX(maxLng),latY(minLat)),clusters=[];for(let id of ids){let c=tree.points[id];clusters.push(c.numPoints?getClusterJSON(c):this.points[c.index])}return clusters}getChildren(clusterId){let originId=this._getOriginId(clusterId),originZoom=this._getOriginZoom(clusterId),errorMsg="No cluster with the specified id.",index=this.trees[originZoom];if(!index)throw Error(errorMsg);let origin=index.points[originId];if(!origin)throw Error(errorMsg);let r=this.options.radius/(this.options.extent*Math.pow(2,originZoom-1)),ids=index.within(origin.x,origin.y,r),children=[];for(let id of ids){let c=index.points[id];c.parentId===clusterId&&children.push(c.numPoints?getClusterJSON(c):this.points[c.index])}if(0===children.length)throw Error(errorMsg);return children}getLeaves(clusterId,limit,offset){limit=limit||10,offset=offset||0;let leaves=[];return this._appendLeaves(leaves,clusterId,limit,offset,0),leaves}getTile(z,x,y){let tree=this.trees[this._limitZoom(z)],z2=Math.pow(2,z),{extent,radius}=this.options,p=radius/extent,top=(y-p)/z2,bottom=(y+1+p)/z2,tile={features:[]};return this._addTileFeatures(tree.range((x-p)/z2,top,(x+1+p)/z2,bottom),tree.points,x,y,z2,tile),0===x&&this._addTileFeatures(tree.range(1-p/z2,top,1,bottom),tree.points,z2,y,z2,tile),x===z2-1&&this._addTileFeatures(tree.range(0,top,p/z2,bottom),tree.points,-1,y,z2,tile),tile.features.length?tile:null}getClusterExpansionZoom(clusterId){let expansionZoom=this._getOriginZoom(clusterId)-1;for(;expansionZoom<=this.options.maxZoom;){let children=this.getChildren(clusterId);if(expansionZoom++,1!==children.length)break;clusterId=children[0].properties.cluster_id}return expansionZoom}_appendLeaves(result,clusterId,limit,offset,skipped){let children=this.getChildren(clusterId);for(let child of children){let props=child.properties;if(props&&props.cluster?skipped+props.point_count<=offset?skipped+=props.point_count:skipped=this._appendLeaves(result,props.cluster_id,limit,offset,skipped):skipped<offset?skipped++:result.push(child),result.length===limit)break}return skipped}_addTileFeatures(ids,points,x,y,z2,tile){for(let i of ids){let tags,px,py,id;let c=points[i],isCluster=c.numPoints;if(isCluster)tags=getClusterProperties(c),px=c.x,py=c.y;else{let p=this.points[c.index];tags=p.properties,px=lngX(p.geometry.coordinates[0]),py=latY(p.geometry.coordinates[1])}let f={type:1,geometry:[[Math.round(this.options.extent*(px*z2-x)),Math.round(this.options.extent*(py*z2-y))]],tags};isCluster?id=c.id:this.options.generateId?id=c.index:this.points[c.index].id&&(id=this.points[c.index].id),void 0!==id&&(f.id=id),tile.features.push(f)}}_limitZoom(z){return Math.max(this.options.minZoom,Math.min(+z,this.options.maxZoom+1))}_cluster(points,zoom){let clusters=[],{radius,extent,reduce,minPoints}=this.options,r=radius/(extent*Math.pow(2,zoom));for(let i=0;i<points.length;i++){let p=points[i];if(p.zoom<=zoom)continue;p.zoom=zoom;let tree=this.trees[zoom+1],neighborIds=tree.within(p.x,p.y,r),numPointsOrigin=p.numPoints||1,numPoints=numPointsOrigin;for(let neighborId of neighborIds){let b=tree.points[neighborId];b.zoom>zoom&&(numPoints+=b.numPoints||1)}if(numPoints>numPointsOrigin&&numPoints>=minPoints){var x,y,numPoints1,properties;let wx=p.x*numPointsOrigin,wy=p.y*numPointsOrigin,clusterProperties=reduce&&numPointsOrigin>1?this._map(p,!0):null,id=(i<<5)+(zoom+1)+this.points.length;for(let neighborId1 of neighborIds){let b1=tree.points[neighborId1];if(b1.zoom<=zoom)continue;b1.zoom=zoom;let numPoints2=b1.numPoints||1;wx+=b1.x*numPoints2,wy+=b1.y*numPoints2,b1.parentId=id,reduce&&(clusterProperties||(clusterProperties=this._map(p,!0)),reduce(clusterProperties,this._map(b1)))}p.parentId=id,clusters.push((x=wx/numPoints,y=wy/numPoints,numPoints1=numPoints,properties=clusterProperties,{x:fround(x),y:fround(y),zoom:1/0,id:id,parentId:-1,numPoints:numPoints1,properties}))}else if(clusters.push(p),numPoints>1)for(let neighborId2 of neighborIds){let b2=tree.points[neighborId2];b2.zoom<=zoom||(b2.zoom=zoom,clusters.push(b2))}}return clusters}_getOriginId(clusterId){return clusterId-this.points.length>>5}_getOriginZoom(clusterId){return(clusterId-this.points.length)%32}_map(point,clone){if(point.numPoints)return clone?extend$1({},point.properties):point.properties;let original=this.points[point.index].properties,result=this.options.map(original);return clone&&result===original?extend$1({},result):result}}function getClusterJSON(cluster){return{type:"Feature",id:cluster.id,properties:getClusterProperties(cluster),geometry:{type:"Point",coordinates:[(cluster.x-.5)*360,360*Math.atan(Math.exp((180-360*cluster.y)*Math.PI/180))/Math.PI-90]}}}function getClusterProperties(cluster){let count=cluster.numPoints,abbrev=count>=1e4?`${Math.round(count/1e3)}k`:count>=1e3?`${Math.round(count/100)/10}k`:count;return extend$1(extend$1({},cluster.properties),{cluster:!0,cluster_id:cluster.id,point_count:count,point_count_abbreviated:abbrev})}function lngX(lng){return lng/360+.5}function latY(lat){let sin=Math.sin(lat*Math.PI/180),y=.5-.25*Math.log((1+sin)/(1-sin))/Math.PI;return y<0?0:y>1?1:y}function extend$1(dest,src){for(let id in src)dest[id]=src[id];return dest}function getX(p){return p.x}function getY(p){return p.y}class Cluster{constructor({markers,position}){this.markers=markers,position&&(position instanceof google.maps.LatLng?this._position=position:this._position=new google.maps.LatLng(position))}get bounds(){if(0!==this.markers.length||this._position)return this.markers.reduce((bounds,marker)=>bounds.extend(marker.getPosition()),new google.maps.LatLngBounds(this._position,this._position))}get position(){return this._position||this.bounds.getCenter()}get count(){return this.markers.filter(m=>m.getVisible()).length}push(marker){this.markers.push(marker)}delete(){this.marker&&(this.marker.setMap(null),delete this.marker),this.markers.length=0}}let extendBoundsToPaddedViewport=(bounds,projection,pixels)=>{let{northEast,southWest}=latLngBoundsToPixelBounds(bounds,projection),extendedPixelBounds=extendPixelBounds({northEast,southWest},pixels);return pixelBoundsToLatLngBounds(extendedPixelBounds,projection)},latLngBoundsToPixelBounds=(bounds,projection)=>({northEast:projection.fromLatLngToDivPixel(bounds.getNorthEast()),southWest:projection.fromLatLngToDivPixel(bounds.getSouthWest())}),extendPixelBounds=({northEast,southWest},pixels)=>(northEast.x+=pixels,northEast.y-=pixels,southWest.x-=pixels,southWest.y+=pixels,{northEast,southWest}),pixelBoundsToLatLngBounds=({northEast,southWest},projection)=>{let bounds=new google.maps.LatLngBounds;return bounds.extend(projection.fromDivPixelToLatLng(northEast)),bounds.extend(projection.fromDivPixelToLatLng(southWest)),bounds};class AbstractAlgorithm{constructor({maxZoom=16}){this.maxZoom=maxZoom}noop({markers}){return noop$1(markers)}}let noop$1=markers=>{let clusters=markers.map(marker=>new Cluster({position:marker.getPosition(),markers:[marker]}));return clusters};class SuperClusterAlgorithm extends AbstractAlgorithm{constructor(_a){var{maxZoom,radius=60}=_a,options=/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */ function(s,e){var t={};for(var p in s)Object.prototype.hasOwnProperty.call(s,p)&&0>e.indexOf(p)&&(t[p]=s[p]);if(null!=s&&"function"==typeof Object.getOwnPropertySymbols)for(var i=0,p=Object.getOwnPropertySymbols(s);i<p.length;i++)0>e.indexOf(p[i])&&Object.prototype.propertyIsEnumerable.call(s,p[i])&&(t[p[i]]=s[p[i]]);return t}(_a,["maxZoom","radius"]);super({maxZoom}),this.superCluster=new Supercluster(Object.assign({maxZoom:this.maxZoom,radius},options)),this.state={zoom:null}}calculate(input){let changed=!1;if(!fastDeepEqual(input.markers,this.markers)){changed=!0,this.markers=[...input.markers];let points=this.markers.map(marker=>({type:"Feature",geometry:{type:"Point",coordinates:[marker.getPosition().lng(),marker.getPosition().lat()]},properties:{marker}}));this.superCluster.load(points)}let state={zoom:input.map.getZoom()};return!changed&&(this.state.zoom>this.maxZoom&&state.zoom>this.maxZoom||(changed=changed||!fastDeepEqual(this.state,state))),this.state=state,changed&&(this.clusters=this.cluster(input)),{clusters:this.clusters,changed}}cluster({map}){return this.superCluster.getClusters([-180,-90,180,90],Math.round(map.getZoom())).map(this.transformCluster.bind(this))}transformCluster({geometry:{coordinates:[lng,lat]},properties}){if(properties.cluster)return new Cluster({markers:this.superCluster.getLeaves(properties.cluster_id,1/0).map(leaf=>leaf.properties.marker),position:new google.maps.LatLng({lat,lng})});{let marker=properties.marker;return new Cluster({markers:[marker],position:marker.getPosition()})}}}class ClusterStats{constructor(markers,clusters){this.markers={sum:markers.length};let clusterMarkerCounts=clusters.map(a=>a.count),clusterMarkerSum=clusterMarkerCounts.reduce((a,b)=>a+b,0);this.clusters={count:clusters.length,markers:{mean:clusterMarkerSum/clusters.length,sum:clusterMarkerSum,min:Math.min(...clusterMarkerCounts),max:Math.max(...clusterMarkerCounts)}}}}class DefaultRenderer{render({count,position},stats){let color=count>Math.max(10,stats.clusters.markers.mean)?"#ff0000":"#0000ff",svg=window.btoa(`
  <svg fill="${color}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 240 240">
    <circle cx="120" cy="120" opacity=".6" r="70" />
    <circle cx="120" cy="120" opacity=".3" r="90" />
    <circle cx="120" cy="120" opacity=".2" r="110" />
  </svg>`);return new google.maps.Marker({position,icon:{url:`data:image/svg+xml;base64,${svg}`,scaledSize:new google.maps.Size(45,45)},label:{text:String(count),color:"rgba(255,255,255,0.9)",fontSize:"12px"},title:`Cluster of ${count} markers`,zIndex:Number(google.maps.Marker.MAX_ZINDEX)+count})}}class OverlayViewSafe{constructor(){!function(type1,type2){for(let property in type2.prototype)type1.prototype[property]=type2.prototype[property]}(OverlayViewSafe,google.maps.OverlayView)}}(MarkerClustererEvents=MarkerClustererEvents1||(MarkerClustererEvents1={})).CLUSTERING_BEGIN="clusteringbegin",MarkerClustererEvents.CLUSTERING_END="clusteringend",MarkerClustererEvents.CLUSTER_CLICK="click";let defaultOnClusterClickHandler=(_,cluster,map)=>{map.fitBounds(cluster.bounds)};class MarkerClusterer extends OverlayViewSafe{constructor({map,markers=[],algorithm=new SuperClusterAlgorithm({}),renderer=new DefaultRenderer,onClusterClick=defaultOnClusterClickHandler}){super(),this.markers=[...markers],this.clusters=[],this.algorithm=algorithm,this.renderer=renderer,this.onClusterClick=onClusterClick,map&&this.setMap(map)}addMarker(marker,noDraw){!this.markers.includes(marker)&&(this.markers.push(marker),noDraw||this.render())}addMarkers(markers,noDraw){markers.forEach(marker=>{this.addMarker(marker,!0)}),noDraw||this.render()}removeMarker(marker,noDraw){let index=this.markers.indexOf(marker);return -1!==index&&(marker.setMap(null),this.markers.splice(index,1),noDraw||this.render(),!0)}removeMarkers(markers,noDraw){let removed=!1;return markers.forEach(marker=>{removed=this.removeMarker(marker,!0)||removed}),removed&&!noDraw&&this.render(),removed}clearMarkers(noDraw){this.markers.length=0,noDraw||this.render()}render(){let map=this.getMap();if(map instanceof google.maps.Map&&this.getProjection()){google.maps.event.trigger(this,MarkerClustererEvents1.CLUSTERING_BEGIN,this);let{clusters,changed}=this.algorithm.calculate({markers:this.markers,map,mapCanvasProjection:this.getProjection()});(changed||void 0==changed)&&(this.reset(),this.clusters=clusters,this.renderClusters()),google.maps.event.trigger(this,MarkerClustererEvents1.CLUSTERING_END,this)}}onAdd(){this.idleListener=this.getMap().addListener("idle",this.render.bind(this)),this.render()}onRemove(){google.maps.event.removeListener(this.idleListener),this.reset()}reset(){this.markers.forEach(marker=>marker.setMap(null)),this.clusters.forEach(cluster=>cluster.delete()),this.clusters=[]}renderClusters(){let stats=new ClusterStats(this.markers,this.clusters),map=this.getMap();this.clusters.forEach(cluster=>{1===cluster.markers.length?cluster.marker=cluster.markers[0]:(cluster.marker=this.renderer.render(cluster,stats),this.onClusterClick&&cluster.marker.addListener("click",event=>{google.maps.event.trigger(this,MarkerClustererEvents1.CLUSTER_CLICK,cluster),this.onClusterClick(event,cluster,map)})),cluster.marker.setMap(map)})}}(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function({children,options}){let markerClusterer=function(options){let map=function(){invariant_1(!!react__WEBPACK_IMPORTED_MODULE_0__.useContext,"useGoogleMap is React hook and requires React version 16.8+");let map=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MapContext);return invariant_1(!!map,"useGoogleMap needs a GoogleMap available up in the tree"),map}(),[markerClusterer,setMarkerClusterer]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{if(map&&null===markerClusterer){let markerCluster=new MarkerClusterer(Object.assign(Object.assign({},options),{map}));setMarkerClusterer(markerCluster)}},[map]),markerClusterer}(options);return null!==markerClusterer?children(markerClusterer):null});let eventMap$c={onCloseClick:"closeclick",onContentChanged:"content_changed",onDomReady:"domready",onPositionChanged:"position_changed",onZindexChanged:"zindex_changed"},updaterMap$c={options(instance,options){instance.setOptions(options)},position(instance,position){instance.setPosition(position)},zIndex(instance,zIndex){instance.setZIndex(zIndex)}};(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function({children,anchor,options,position,zIndex,onCloseClick,onDomReady,onContentChanged,onPositionChanged,onZindexChanged,onLoad,onUnmount}){let map=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MapContext),[instance,setInstance]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[closeclickListener,setCloseClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[domreadyclickListener,setDomReadyClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[contentchangedclickListener,setContentChangedClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[positionchangedclickListener,setPositionChangedClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[zindexchangedclickListener,setZindexChangedClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),containerElementRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{null!==instance&&(instance.close(),anchor?instance.open(map,anchor):instance.getPosition()&&instance.open(map))},[map,instance,anchor]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{options&&null!==instance&&instance.setOptions(options)},[instance,options]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{position&&null!==instance&&instance.setPosition(position)},[position]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{"number"==typeof zIndex&&null!==instance&&instance.setZIndex(zIndex)},[zIndex]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onCloseClick&&(null!==closeclickListener&&google.maps.event.removeListener(closeclickListener),setCloseClickListener(google.maps.event.addListener(instance,"closeclick",onCloseClick)))},[onCloseClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDomReady&&(null!==domreadyclickListener&&google.maps.event.removeListener(domreadyclickListener),setDomReadyClickListener(google.maps.event.addListener(instance,"domready",onDomReady)))},[onDomReady]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onContentChanged&&(null!==contentchangedclickListener&&google.maps.event.removeListener(contentchangedclickListener),setContentChangedClickListener(google.maps.event.addListener(instance,"content_changed",onContentChanged)))},[onContentChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onPositionChanged&&(null!==positionchangedclickListener&&google.maps.event.removeListener(positionchangedclickListener),setPositionChangedClickListener(google.maps.event.addListener(instance,"position_changed",onPositionChanged)))},[onPositionChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onZindexChanged&&(null!==zindexchangedclickListener&&google.maps.event.removeListener(zindexchangedclickListener),setZindexChangedClickListener(google.maps.event.addListener(instance,"zindex_changed",onZindexChanged)))},[onZindexChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{let infoWindow=new google.maps.InfoWindow(Object.assign({},options||{}));return setInstance(infoWindow),containerElementRef.current=document.createElement("div"),onCloseClick&&setCloseClickListener(google.maps.event.addListener(infoWindow,"closeclick",onCloseClick)),onDomReady&&setDomReadyClickListener(google.maps.event.addListener(infoWindow,"domready",onDomReady)),onContentChanged&&setContentChangedClickListener(google.maps.event.addListener(infoWindow,"content_changed",onContentChanged)),onPositionChanged&&setPositionChangedClickListener(google.maps.event.addListener(infoWindow,"position_changed",onPositionChanged)),onZindexChanged&&setZindexChangedClickListener(google.maps.event.addListener(infoWindow,"zindex_changed",onZindexChanged)),infoWindow.setContent(containerElementRef.current),position&&infoWindow.setPosition(position),zIndex&&infoWindow.setZIndex(zIndex),anchor?infoWindow.open(map,anchor):infoWindow.getPosition()?infoWindow.open(map):invariant_1(!1,"You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoWindow>."),onLoad&&onLoad(infoWindow),()=>{closeclickListener&&google.maps.event.removeListener(closeclickListener),contentchangedclickListener&&google.maps.event.removeListener(contentchangedclickListener),domreadyclickListener&&google.maps.event.removeListener(domreadyclickListener),positionchangedclickListener&&google.maps.event.removeListener(positionchangedclickListener),zindexchangedclickListener&&google.maps.event.removeListener(zindexchangedclickListener),onUnmount&&onUnmount(infoWindow),infoWindow.close()}},[]),containerElementRef.current?(0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(react__WEBPACK_IMPORTED_MODULE_0__.Children.only(children),containerElementRef.current):null});class InfoWindow extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.registeredEvents=[],this.containerElement=null,this.state={infoWindow:null},this.open=(infoWindow,anchor)=>{anchor?infoWindow.open(this.context,anchor):infoWindow.getPosition()?infoWindow.open(this.context):invariant_1(!1,"You must provide either an anchor (typically render it inside a <Marker>) or a position props for <InfoWindow>.")},this.setInfoWindowCallback=()=>{null!==this.state.infoWindow&&null!==this.containerElement&&(this.state.infoWindow.setContent(this.containerElement),this.open(this.state.infoWindow,this.props.anchor),this.props.onLoad&&this.props.onLoad(this.state.infoWindow))}}componentDidMount(){let infoWindow=new google.maps.InfoWindow(Object.assign({},this.props.options||{}));this.containerElement=document.createElement("div"),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$c,eventMap:eventMap$c,prevProps:{},nextProps:this.props,instance:infoWindow}),this.setState(()=>({infoWindow}),this.setInfoWindowCallback)}componentDidUpdate(prevProps){null!==this.state.infoWindow&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$c,eventMap:eventMap$c,prevProps,nextProps:this.props,instance:this.state.infoWindow}))}componentWillUnmount(){null!==this.state.infoWindow&&(unregisterEvents(this.registeredEvents),this.props.onUnmount&&this.props.onUnmount(this.state.infoWindow),this.state.infoWindow.close())}render(){return this.containerElement?(0,react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal)(react__WEBPACK_IMPORTED_MODULE_0__.Children.only(this.props.children),this.containerElement):null}}InfoWindow.contextType=MapContext;let eventMap$b={onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},updaterMap$b={draggable(instance,draggable){instance.setDraggable(draggable)},editable(instance,editable){instance.setEditable(editable)},map(instance,map){instance.setMap(map)},options(instance,options){instance.setOptions(options)},path(instance,path){instance.setPath(path)},visible(instance,visible){instance.setVisible(visible)}},defaultOptions$1={};(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function({options,draggable,editable,visible,path,onDblClick,onDragEnd,onDragStart,onMouseDown,onMouseMove,onMouseOut,onMouseOver,onMouseUp,onRightClick,onClick,onDrag,onLoad,onUnmount}){let map=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MapContext),[instance,setInstance]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dblclickListener,setDblclickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragendListener,setDragendListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragstartListener,setDragstartListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mousedownListener,setMousedownListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mousemoveListener,setMousemoveListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseoutListener,setMouseoutListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseoverListener,setMouseoverListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseupListener,setMouseupListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[rightclickListener,setRightclickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[clickListener,setClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragListener,setDragListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{null!==instance&&instance.setMap(map)},[map]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==options&&null!==instance&&instance.setOptions(options)},[instance,options]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==draggable&&null!==instance&&instance.setDraggable(draggable)},[instance,draggable]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==editable&&null!==instance&&instance.setEditable(editable)},[instance,editable]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==visible&&null!==instance&&instance.setVisible(visible)},[instance,visible]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==path&&null!==instance&&instance.setPath(path)},[instance,path]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDblClick&&(null!==dblclickListener&&google.maps.event.removeListener(dblclickListener),setDblclickListener(google.maps.event.addListener(instance,"dblclick",onDblClick)))},[onDblClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDragEnd&&(null!==dragendListener&&google.maps.event.removeListener(dragendListener),setDragendListener(google.maps.event.addListener(instance,"dragend",onDragEnd)))},[onDragEnd]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDragStart&&(null!==dragstartListener&&google.maps.event.removeListener(dragstartListener),setDragstartListener(google.maps.event.addListener(instance,"dragstart",onDragStart)))},[onDragStart]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseDown&&(null!==mousedownListener&&google.maps.event.removeListener(mousedownListener),setMousedownListener(google.maps.event.addListener(instance,"mousedown",onMouseDown)))},[onMouseDown]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseMove&&(null!==mousemoveListener&&google.maps.event.removeListener(mousemoveListener),setMousemoveListener(google.maps.event.addListener(instance,"mousemove",onMouseMove)))},[onMouseMove]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseOut&&(null!==mouseoutListener&&google.maps.event.removeListener(mouseoutListener),setMouseoutListener(google.maps.event.addListener(instance,"mouseout",onMouseOut)))},[onMouseOut]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseOver&&(null!==mouseoverListener&&google.maps.event.removeListener(mouseoverListener),setMouseoverListener(google.maps.event.addListener(instance,"mouseover",onMouseOver)))},[onMouseOver]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseUp&&(null!==mouseupListener&&google.maps.event.removeListener(mouseupListener),setMouseupListener(google.maps.event.addListener(instance,"mouseup",onMouseUp)))},[onMouseUp]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onRightClick&&(null!==rightclickListener&&google.maps.event.removeListener(rightclickListener),setRightclickListener(google.maps.event.addListener(instance,"rightclick",onRightClick)))},[onRightClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onClick&&(null!==clickListener&&google.maps.event.removeListener(clickListener),setClickListener(google.maps.event.addListener(instance,"click",onClick)))},[onClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDrag&&(null!==dragListener&&google.maps.event.removeListener(dragListener),setDragListener(google.maps.event.addListener(instance,"drag",onDrag)))},[onDrag]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{let polyline=new google.maps.Polyline(Object.assign(Object.assign({},options||defaultOptions$1),{map}));return path&&polyline.setPath(path),void 0!==visible&&polyline.setVisible(visible),void 0!==editable&&polyline.setEditable(editable),void 0!==draggable&&polyline.setDraggable(draggable),onDblClick&&setDblclickListener(google.maps.event.addListener(polyline,"dblclick",onDblClick)),onDragEnd&&setDragendListener(google.maps.event.addListener(polyline,"dragend",onDragEnd)),onDragStart&&setDragstartListener(google.maps.event.addListener(polyline,"dragstart",onDragStart)),onMouseDown&&setMousedownListener(google.maps.event.addListener(polyline,"mousedown",onMouseDown)),onMouseMove&&setMousemoveListener(google.maps.event.addListener(polyline,"mousemove",onMouseMove)),onMouseOut&&setMouseoutListener(google.maps.event.addListener(polyline,"mouseout",onMouseOut)),onMouseOver&&setMouseoverListener(google.maps.event.addListener(polyline,"mouseover",onMouseOver)),onMouseUp&&setMouseupListener(google.maps.event.addListener(polyline,"mouseup",onMouseUp)),onRightClick&&setRightclickListener(google.maps.event.addListener(polyline,"rightclick",onRightClick)),onClick&&setClickListener(google.maps.event.addListener(polyline,"click",onClick)),onDrag&&setDragListener(google.maps.event.addListener(polyline,"drag",onDrag)),setInstance(polyline),onLoad&&onLoad(polyline),()=>{null!==dblclickListener&&google.maps.event.removeListener(dblclickListener),null!==dragendListener&&google.maps.event.removeListener(dragendListener),null!==dragstartListener&&google.maps.event.removeListener(dragstartListener),null!==mousedownListener&&google.maps.event.removeListener(mousedownListener),null!==mousemoveListener&&google.maps.event.removeListener(mousemoveListener),null!==mouseoutListener&&google.maps.event.removeListener(mouseoutListener),null!==mouseoverListener&&google.maps.event.removeListener(mouseoverListener),null!==mouseupListener&&google.maps.event.removeListener(mouseupListener),null!==rightclickListener&&google.maps.event.removeListener(rightclickListener),null!==clickListener&&google.maps.event.removeListener(clickListener),onUnmount&&onUnmount(polyline),polyline.setMap(null)}},[]),null});class Polyline extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.registeredEvents=[],this.state={polyline:null},this.setPolylineCallback=()=>{null!==this.state.polyline&&this.props.onLoad&&this.props.onLoad(this.state.polyline)}}componentDidMount(){let polyline=new google.maps.Polyline(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$b,eventMap:eventMap$b,prevProps:{},nextProps:this.props,instance:polyline}),this.setState(function(){return{polyline}},this.setPolylineCallback)}componentDidUpdate(prevProps){null!==this.state.polyline&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$b,eventMap:eventMap$b,prevProps,nextProps:this.props,instance:this.state.polyline}))}componentWillUnmount(){null!==this.state.polyline&&(this.props.onUnmount&&this.props.onUnmount(this.state.polyline),unregisterEvents(this.registeredEvents),this.state.polyline.setMap(null))}render(){return null}}Polyline.contextType=MapContext;let eventMap$a={onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},updaterMap$a={draggable(instance,draggable){instance.setDraggable(draggable)},editable(instance,editable){instance.setEditable(editable)},map(instance,map){instance.setMap(map)},options(instance,options){instance.setOptions(options)},path(instance,path){instance.setPath(path)},paths(instance,paths){instance.setPaths(paths)},visible(instance,visible){instance.setVisible(visible)}};(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function({options,draggable,editable,visible,path,paths,onDblClick,onDragEnd,onDragStart,onMouseDown,onMouseMove,onMouseOut,onMouseOver,onMouseUp,onRightClick,onClick,onDrag,onLoad,onUnmount}){let map=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MapContext),[instance,setInstance]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dblclickListener,setDblclickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragendListener,setDragendListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragstartListener,setDragstartListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mousedownListener,setMousedownListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mousemoveListener,setMousemoveListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseoutListener,setMouseoutListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseoverListener,setMouseoverListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseupListener,setMouseupListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[rightclickListener,setRightclickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[clickListener,setClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragListener,setDragListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{null!==instance&&instance.setMap(map)},[map]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==options&&null!==instance&&instance.setOptions(options)},[instance,options]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==draggable&&null!==instance&&instance.setDraggable(draggable)},[instance,draggable]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==editable&&null!==instance&&instance.setEditable(editable)},[instance,editable]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==visible&&null!==instance&&instance.setVisible(visible)},[instance,visible]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==path&&null!==instance&&instance.setPath(path)},[instance,path]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==paths&&null!==instance&&instance.setPaths(paths)},[instance,paths]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDblClick&&(null!==dblclickListener&&google.maps.event.removeListener(dblclickListener),setDblclickListener(google.maps.event.addListener(instance,"dblclick",onDblClick)))},[onDblClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDragEnd&&(null!==dragendListener&&google.maps.event.removeListener(dragendListener),setDragendListener(google.maps.event.addListener(instance,"dragend",onDragEnd)))},[onDragEnd]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDragStart&&(null!==dragstartListener&&google.maps.event.removeListener(dragstartListener),setDragstartListener(google.maps.event.addListener(instance,"dragstart",onDragStart)))},[onDragStart]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseDown&&(null!==mousedownListener&&google.maps.event.removeListener(mousedownListener),setMousedownListener(google.maps.event.addListener(instance,"mousedown",onMouseDown)))},[onMouseDown]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseMove&&(null!==mousemoveListener&&google.maps.event.removeListener(mousemoveListener),setMousemoveListener(google.maps.event.addListener(instance,"mousemove",onMouseMove)))},[onMouseMove]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseOut&&(null!==mouseoutListener&&google.maps.event.removeListener(mouseoutListener),setMouseoutListener(google.maps.event.addListener(instance,"mouseout",onMouseOut)))},[onMouseOut]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseOver&&(null!==mouseoverListener&&google.maps.event.removeListener(mouseoverListener),setMouseoverListener(google.maps.event.addListener(instance,"mouseover",onMouseOver)))},[onMouseOver]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseUp&&(null!==mouseupListener&&google.maps.event.removeListener(mouseupListener),setMouseupListener(google.maps.event.addListener(instance,"mouseup",onMouseUp)))},[onMouseUp]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onRightClick&&(null!==rightclickListener&&google.maps.event.removeListener(rightclickListener),setRightclickListener(google.maps.event.addListener(instance,"rightclick",onRightClick)))},[onRightClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onClick&&(null!==clickListener&&google.maps.event.removeListener(clickListener),setClickListener(google.maps.event.addListener(instance,"click",onClick)))},[onClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDrag&&(null!==dragListener&&google.maps.event.removeListener(dragListener),setDragListener(google.maps.event.addListener(instance,"drag",onDrag)))},[onDrag]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{let polygon=new google.maps.Polygon(Object.assign(Object.assign({},options||{}),{map}));return path&&polygon.setPath(path),paths&&polygon.setPaths(paths),void 0!==visible&&polygon.setVisible(visible),void 0!==editable&&polygon.setEditable(editable),void 0!==draggable&&polygon.setDraggable(draggable),onDblClick&&setDblclickListener(google.maps.event.addListener(polygon,"dblclick",onDblClick)),onDragEnd&&setDragendListener(google.maps.event.addListener(polygon,"dragend",onDragEnd)),onDragStart&&setDragstartListener(google.maps.event.addListener(polygon,"dragstart",onDragStart)),onMouseDown&&setMousedownListener(google.maps.event.addListener(polygon,"mousedown",onMouseDown)),onMouseMove&&setMousemoveListener(google.maps.event.addListener(polygon,"mousemove",onMouseMove)),onMouseOut&&setMouseoutListener(google.maps.event.addListener(polygon,"mouseout",onMouseOut)),onMouseOver&&setMouseoverListener(google.maps.event.addListener(polygon,"mouseover",onMouseOver)),onMouseUp&&setMouseupListener(google.maps.event.addListener(polygon,"mouseup",onMouseUp)),onRightClick&&setRightclickListener(google.maps.event.addListener(polygon,"rightclick",onRightClick)),onClick&&setClickListener(google.maps.event.addListener(polygon,"click",onClick)),onDrag&&setDragListener(google.maps.event.addListener(polygon,"drag",onDrag)),setInstance(polygon),onLoad&&onLoad(polygon),()=>{null!==dblclickListener&&google.maps.event.removeListener(dblclickListener),null!==dragendListener&&google.maps.event.removeListener(dragendListener),null!==dragstartListener&&google.maps.event.removeListener(dragstartListener),null!==mousedownListener&&google.maps.event.removeListener(mousedownListener),null!==mousemoveListener&&google.maps.event.removeListener(mousemoveListener),null!==mouseoutListener&&google.maps.event.removeListener(mouseoutListener),null!==mouseoverListener&&google.maps.event.removeListener(mouseoverListener),null!==mouseupListener&&google.maps.event.removeListener(mouseupListener),null!==rightclickListener&&google.maps.event.removeListener(rightclickListener),null!==clickListener&&google.maps.event.removeListener(clickListener),onUnmount&&onUnmount(polygon),polygon.setMap(null)}},[]),null});class Polygon extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.registeredEvents=[],this.state={polygon:null},this.setPolygonCallback=()=>{null!==this.state.polygon&&this.props.onLoad&&this.props.onLoad(this.state.polygon)}}componentDidMount(){let polygon=new google.maps.Polygon(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$a,eventMap:eventMap$a,prevProps:{},nextProps:this.props,instance:polygon}),this.setState(function(){return{polygon}},this.setPolygonCallback)}componentDidUpdate(prevProps){null!==this.state.polygon&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$a,eventMap:eventMap$a,prevProps,nextProps:this.props,instance:this.state.polygon}))}componentWillUnmount(){null!==this.state.polygon&&(this.props.onUnmount&&this.props.onUnmount(this.state.polygon),unregisterEvents(this.registeredEvents),this.state.polygon&&this.state.polygon.setMap(null))}render(){return null}}Polygon.contextType=MapContext;let eventMap$9={onBoundsChanged:"bounds_changed",onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},updaterMap$9={bounds(instance,bounds){instance.setBounds(bounds)},draggable(instance,draggable){instance.setDraggable(draggable)},editable(instance,editable){instance.setEditable(editable)},map(instance,map){instance.setMap(map)},options(instance,options){instance.setOptions(options)},visible(instance,visible){instance.setVisible(visible)}};(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function({options,bounds,draggable,editable,visible,onDblClick,onDragEnd,onDragStart,onMouseDown,onMouseMove,onMouseOut,onMouseOver,onMouseUp,onRightClick,onClick,onDrag,onBoundsChanged,onLoad,onUnmount}){let map=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MapContext),[instance,setInstance]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dblclickListener,setDblclickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragendListener,setDragendListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragstartListener,setDragstartListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mousedownListener,setMousedownListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mousemoveListener,setMousemoveListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseoutListener,setMouseoutListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseoverListener,setMouseoverListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseupListener,setMouseupListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[rightclickListener,setRightclickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[clickListener,setClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragListener,setDragListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[boundsChangedListener,setBoundsChangedListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{null!==instance&&instance.setMap(map)},[map]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==options&&null!==instance&&instance.setOptions(options)},[instance,options]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==draggable&&null!==instance&&instance.setDraggable(draggable)},[instance,draggable]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==editable&&null!==instance&&instance.setEditable(editable)},[instance,editable]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==visible&&null!==instance&&instance.setVisible(visible)},[instance,visible]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==bounds&&null!==instance&&instance.setBounds(bounds)},[instance,bounds]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDblClick&&(null!==dblclickListener&&google.maps.event.removeListener(dblclickListener),setDblclickListener(google.maps.event.addListener(instance,"dblclick",onDblClick)))},[onDblClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDragEnd&&(null!==dragendListener&&google.maps.event.removeListener(dragendListener),setDragendListener(google.maps.event.addListener(instance,"dragend",onDragEnd)))},[onDragEnd]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDragStart&&(null!==dragstartListener&&google.maps.event.removeListener(dragstartListener),setDragstartListener(google.maps.event.addListener(instance,"dragstart",onDragStart)))},[onDragStart]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseDown&&(null!==mousedownListener&&google.maps.event.removeListener(mousedownListener),setMousedownListener(google.maps.event.addListener(instance,"mousedown",onMouseDown)))},[onMouseDown]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseMove&&(null!==mousemoveListener&&google.maps.event.removeListener(mousemoveListener),setMousemoveListener(google.maps.event.addListener(instance,"mousemove",onMouseMove)))},[onMouseMove]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseOut&&(null!==mouseoutListener&&google.maps.event.removeListener(mouseoutListener),setMouseoutListener(google.maps.event.addListener(instance,"mouseout",onMouseOut)))},[onMouseOut]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseOver&&(null!==mouseoverListener&&google.maps.event.removeListener(mouseoverListener),setMouseoverListener(google.maps.event.addListener(instance,"mouseover",onMouseOver)))},[onMouseOver]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseUp&&(null!==mouseupListener&&google.maps.event.removeListener(mouseupListener),setMouseupListener(google.maps.event.addListener(instance,"mouseup",onMouseUp)))},[onMouseUp]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onRightClick&&(null!==rightclickListener&&google.maps.event.removeListener(rightclickListener),setRightclickListener(google.maps.event.addListener(instance,"rightclick",onRightClick)))},[onRightClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onClick&&(null!==clickListener&&google.maps.event.removeListener(clickListener),setClickListener(google.maps.event.addListener(instance,"click",onClick)))},[onClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDrag&&(null!==dragListener&&google.maps.event.removeListener(dragListener),setDragListener(google.maps.event.addListener(instance,"drag",onDrag)))},[onDrag]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onBoundsChanged&&(null!==boundsChangedListener&&google.maps.event.removeListener(boundsChangedListener),setBoundsChangedListener(google.maps.event.addListener(instance,"bounds_changed",onBoundsChanged)))},[onBoundsChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{let rectangle=new google.maps.Rectangle(Object.assign(Object.assign({},options||{}),{map}));return void 0!==visible&&rectangle.setVisible(visible),void 0!==editable&&rectangle.setEditable(editable),void 0!==draggable&&rectangle.setDraggable(draggable),void 0!==bounds&&rectangle.setBounds(bounds),onDblClick&&setDblclickListener(google.maps.event.addListener(rectangle,"dblclick",onDblClick)),onDragEnd&&setDragendListener(google.maps.event.addListener(rectangle,"dragend",onDragEnd)),onDragStart&&setDragstartListener(google.maps.event.addListener(rectangle,"dragstart",onDragStart)),onMouseDown&&setMousedownListener(google.maps.event.addListener(rectangle,"mousedown",onMouseDown)),onMouseMove&&setMousemoveListener(google.maps.event.addListener(rectangle,"mousemove",onMouseMove)),onMouseOut&&setMouseoutListener(google.maps.event.addListener(rectangle,"mouseout",onMouseOut)),onMouseOver&&setMouseoverListener(google.maps.event.addListener(rectangle,"mouseover",onMouseOver)),onMouseUp&&setMouseupListener(google.maps.event.addListener(rectangle,"mouseup",onMouseUp)),onRightClick&&setRightclickListener(google.maps.event.addListener(rectangle,"rightclick",onRightClick)),onClick&&setClickListener(google.maps.event.addListener(rectangle,"click",onClick)),onDrag&&setDragListener(google.maps.event.addListener(rectangle,"drag",onDrag)),onBoundsChanged&&setBoundsChangedListener(google.maps.event.addListener(rectangle,"bounds_changed",onBoundsChanged)),setInstance(rectangle),onLoad&&onLoad(rectangle),()=>{null!==dblclickListener&&google.maps.event.removeListener(dblclickListener),null!==dragendListener&&google.maps.event.removeListener(dragendListener),null!==dragstartListener&&google.maps.event.removeListener(dragstartListener),null!==mousedownListener&&google.maps.event.removeListener(mousedownListener),null!==mousemoveListener&&google.maps.event.removeListener(mousemoveListener),null!==mouseoutListener&&google.maps.event.removeListener(mouseoutListener),null!==mouseoverListener&&google.maps.event.removeListener(mouseoverListener),null!==mouseupListener&&google.maps.event.removeListener(mouseupListener),null!==rightclickListener&&google.maps.event.removeListener(rightclickListener),null!==clickListener&&google.maps.event.removeListener(clickListener),null!==dragListener&&google.maps.event.removeListener(dragListener),null!==boundsChangedListener&&google.maps.event.removeListener(boundsChangedListener),onUnmount&&onUnmount(rectangle),rectangle.setMap(null)}},[]),null});class Rectangle extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.registeredEvents=[],this.state={rectangle:null},this.setRectangleCallback=()=>{null!==this.state.rectangle&&this.props.onLoad&&this.props.onLoad(this.state.rectangle)}}componentDidMount(){let rectangle=new google.maps.Rectangle(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$9,eventMap:eventMap$9,prevProps:{},nextProps:this.props,instance:rectangle}),this.setState(function(){return{rectangle}},this.setRectangleCallback)}componentDidUpdate(prevProps){null!==this.state.rectangle&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$9,eventMap:eventMap$9,prevProps,nextProps:this.props,instance:this.state.rectangle}))}componentWillUnmount(){null!==this.state.rectangle&&(this.props.onUnmount&&this.props.onUnmount(this.state.rectangle),unregisterEvents(this.registeredEvents),this.state.rectangle.setMap(null))}render(){return null}}Rectangle.contextType=MapContext;let eventMap$8={onCenterChanged:"center_changed",onRadiusChanged:"radius_changed",onClick:"click",onDblClick:"dblclick",onDrag:"drag",onDragEnd:"dragend",onDragStart:"dragstart",onMouseDown:"mousedown",onMouseMove:"mousemove",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick"},updaterMap$8={center(instance,center){instance.setCenter(center)},draggable(instance,draggable){instance.setDraggable(draggable)},editable(instance,editable){instance.setEditable(editable)},map(instance,map){instance.setMap(map)},options(instance,options){instance.setOptions(options)},radius(instance,radius){instance.setRadius(radius)},visible(instance,visible){instance.setVisible(visible)}},defaultOptions={};(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function({options,center,radius,draggable,editable,visible,onDblClick,onDragEnd,onDragStart,onMouseDown,onMouseMove,onMouseOut,onMouseOver,onMouseUp,onRightClick,onClick,onDrag,onCenterChanged,onRadiusChanged,onLoad,onUnmount}){let map=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MapContext),[instance,setInstance]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dblclickListener,setDblclickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragendListener,setDragendListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragstartListener,setDragstartListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mousedownListener,setMousedownListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mousemoveListener,setMousemoveListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseoutListener,setMouseoutListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseoverListener,setMouseoverListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseupListener,setMouseupListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[rightclickListener,setRightclickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[clickListener,setClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dragListener,setDragListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[centerChangedListener,setCenterChangedListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[radiusChangedListener,setRadiusChangedListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{null!==instance&&instance.setMap(map)},[map]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==options&&null!==instance&&instance.setOptions(options)},[instance,options]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==draggable&&null!==instance&&instance.setDraggable(draggable)},[instance,draggable]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==editable&&null!==instance&&instance.setEditable(editable)},[instance,editable]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==visible&&null!==instance&&instance.setVisible(visible)},[instance,visible]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{"number"==typeof radius&&null!==instance&&instance.setRadius(radius)},[instance,radius]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{void 0!==center&&null!==instance&&instance.setCenter(center)},[instance,center]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDblClick&&(null!==dblclickListener&&google.maps.event.removeListener(dblclickListener),setDblclickListener(google.maps.event.addListener(instance,"dblclick",onDblClick)))},[onDblClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDragEnd&&(null!==dragendListener&&google.maps.event.removeListener(dragendListener),setDragendListener(google.maps.event.addListener(instance,"dragend",onDragEnd)))},[onDragEnd]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDragStart&&(null!==dragstartListener&&google.maps.event.removeListener(dragstartListener),setDragstartListener(google.maps.event.addListener(instance,"dragstart",onDragStart)))},[onDragStart]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseDown&&(null!==mousedownListener&&google.maps.event.removeListener(mousedownListener),setMousedownListener(google.maps.event.addListener(instance,"mousedown",onMouseDown)))},[onMouseDown]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseMove&&(null!==mousemoveListener&&google.maps.event.removeListener(mousemoveListener),setMousemoveListener(google.maps.event.addListener(instance,"mousemove",onMouseMove)))},[onMouseMove]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseOut&&(null!==mouseoutListener&&google.maps.event.removeListener(mouseoutListener),setMouseoutListener(google.maps.event.addListener(instance,"mouseout",onMouseOut)))},[onMouseOut]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseOver&&(null!==mouseoverListener&&google.maps.event.removeListener(mouseoverListener),setMouseoverListener(google.maps.event.addListener(instance,"mouseover",onMouseOver)))},[onMouseOver]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseUp&&(null!==mouseupListener&&google.maps.event.removeListener(mouseupListener),setMouseupListener(google.maps.event.addListener(instance,"mouseup",onMouseUp)))},[onMouseUp]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onRightClick&&(null!==rightclickListener&&google.maps.event.removeListener(rightclickListener),setRightclickListener(google.maps.event.addListener(instance,"rightclick",onRightClick)))},[onRightClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onClick&&(null!==clickListener&&google.maps.event.removeListener(clickListener),setClickListener(google.maps.event.addListener(instance,"click",onClick)))},[onClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDrag&&(null!==dragListener&&google.maps.event.removeListener(dragListener),setDragListener(google.maps.event.addListener(instance,"drag",onDrag)))},[onDrag]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onCenterChanged&&(null!==centerChangedListener&&google.maps.event.removeListener(centerChangedListener),setCenterChangedListener(google.maps.event.addListener(instance,"center_changed",onCenterChanged)))},[onClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onRadiusChanged&&(null!==radiusChangedListener&&google.maps.event.removeListener(radiusChangedListener),setRadiusChangedListener(google.maps.event.addListener(instance,"radius_changed",onRadiusChanged)))},[onRadiusChanged]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{let circle=new google.maps.Circle(Object.assign(Object.assign({},options||defaultOptions),{map}));return"number"==typeof radius&&circle.setRadius(radius),void 0!==center&&circle.setCenter(center),"number"==typeof radius&&circle.setRadius(radius),void 0!==visible&&circle.setVisible(visible),void 0!==editable&&circle.setEditable(editable),void 0!==draggable&&circle.setDraggable(draggable),onDblClick&&setDblclickListener(google.maps.event.addListener(circle,"dblclick",onDblClick)),onDragEnd&&setDragendListener(google.maps.event.addListener(circle,"dragend",onDragEnd)),onDragStart&&setDragstartListener(google.maps.event.addListener(circle,"dragstart",onDragStart)),onMouseDown&&setMousedownListener(google.maps.event.addListener(circle,"mousedown",onMouseDown)),onMouseMove&&setMousemoveListener(google.maps.event.addListener(circle,"mousemove",onMouseMove)),onMouseOut&&setMouseoutListener(google.maps.event.addListener(circle,"mouseout",onMouseOut)),onMouseOver&&setMouseoverListener(google.maps.event.addListener(circle,"mouseover",onMouseOver)),onMouseUp&&setMouseupListener(google.maps.event.addListener(circle,"mouseup",onMouseUp)),onRightClick&&setRightclickListener(google.maps.event.addListener(circle,"rightclick",onRightClick)),onClick&&setClickListener(google.maps.event.addListener(circle,"click",onClick)),onDrag&&setDragListener(google.maps.event.addListener(circle,"drag",onDrag)),onCenterChanged&&setCenterChangedListener(google.maps.event.addListener(circle,"center_changed",onCenterChanged)),onRadiusChanged&&setRadiusChangedListener(google.maps.event.addListener(circle,"radius_changed",onRadiusChanged)),setInstance(circle),onLoad&&onLoad(circle),()=>{null!==dblclickListener&&google.maps.event.removeListener(dblclickListener),null!==dragendListener&&google.maps.event.removeListener(dragendListener),null!==dragstartListener&&google.maps.event.removeListener(dragstartListener),null!==mousedownListener&&google.maps.event.removeListener(mousedownListener),null!==mousemoveListener&&google.maps.event.removeListener(mousemoveListener),null!==mouseoutListener&&google.maps.event.removeListener(mouseoutListener),null!==mouseoverListener&&google.maps.event.removeListener(mouseoverListener),null!==mouseupListener&&google.maps.event.removeListener(mouseupListener),null!==rightclickListener&&google.maps.event.removeListener(rightclickListener),null!==clickListener&&google.maps.event.removeListener(clickListener),null!==centerChangedListener&&google.maps.event.removeListener(centerChangedListener),null!==radiusChangedListener&&google.maps.event.removeListener(radiusChangedListener),onUnmount&&onUnmount(circle),circle.setMap(null)}},[]),null});class Circle extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.registeredEvents=[],this.state={circle:null},this.setCircleCallback=()=>{null!==this.state.circle&&this.props.onLoad&&this.props.onLoad(this.state.circle)}}componentDidMount(){let circle=new google.maps.Circle(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$8,eventMap:eventMap$8,prevProps:{},nextProps:this.props,instance:circle}),this.setState(function(){return{circle}},this.setCircleCallback)}componentDidUpdate(prevProps){null!==this.state.circle&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$8,eventMap:eventMap$8,prevProps,nextProps:this.props,instance:this.state.circle}))}componentWillUnmount(){null!==this.state.circle&&(this.props.onUnmount&&this.props.onUnmount(this.state.circle),unregisterEvents(this.registeredEvents),this.state.circle&&this.state.circle.setMap(null))}render(){return null}}Circle.contextType=MapContext;let eventMap$7={onClick:"click",onDblClick:"dblclick",onMouseDown:"mousedown",onMouseOut:"mouseout",onMouseOver:"mouseover",onMouseUp:"mouseup",onRightClick:"rightclick",onAddFeature:"addfeature",onRemoveFeature:"removefeature",onRemoveProperty:"removeproperty",onSetGeometry:"setgeometry",onSetProperty:"setproperty"},updaterMap$7={add(instance,feature){instance.add(feature)},addgeojson(instance,geojson,options){instance.addGeoJson(geojson,options)},contains(instance,feature){instance.contains(feature)},foreach(instance,callback){instance.forEach(callback)},loadgeojson(instance,url,options,callback){instance.loadGeoJson(url,options,callback)},overridestyle(instance,feature,style){instance.overrideStyle(feature,style)},remove(instance,feature){instance.remove(feature)},revertstyle(instance,feature){instance.revertStyle(feature)},controlposition(instance,controlPosition){instance.setControlPosition(controlPosition)},controls(instance,controls){instance.setControls(controls)},drawingmode(instance,mode){instance.setDrawingMode(mode)},map(instance,map){instance.setMap(map)},style(instance,style){instance.setStyle(style)},togeojson(instance,callback){instance.toGeoJson(callback)}};(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function({options,onClick,onDblClick,onMouseDown,onMouseMove,onMouseOut,onMouseOver,onMouseUp,onRightClick,onAddFeature,onRemoveFeature,onRemoveProperty,onSetGeometry,onSetProperty,onLoad,onUnmount}){let map=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MapContext),[instance,setInstance]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[dblclickListener,setDblclickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mousedownListener,setMousedownListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mousemoveListener,setMousemoveListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseoutListener,setMouseoutListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseoverListener,setMouseoverListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[mouseupListener,setMouseupListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[rightclickListener,setRightclickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[clickListener,setClickListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[addFeatureListener,setAddFeatureListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[removeFeatureListener,setRemoveFeatureListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[removePropertyListener,setRemovePropertyListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[setGeometryListener,setSetGeometryListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null),[setPropertyListener,setSetPropertyListener]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{null!==instance&&instance.setMap(map)},[map]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onDblClick&&(null!==dblclickListener&&google.maps.event.removeListener(dblclickListener),setDblclickListener(google.maps.event.addListener(instance,"dblclick",onDblClick)))},[onDblClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseDown&&(null!==mousedownListener&&google.maps.event.removeListener(mousedownListener),setMousedownListener(google.maps.event.addListener(instance,"mousedown",onMouseDown)))},[onMouseDown]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseMove&&(null!==mousemoveListener&&google.maps.event.removeListener(mousemoveListener),setMousemoveListener(google.maps.event.addListener(instance,"mousemove",onMouseMove)))},[onMouseMove]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseOut&&(null!==mouseoutListener&&google.maps.event.removeListener(mouseoutListener),setMouseoutListener(google.maps.event.addListener(instance,"mouseout",onMouseOut)))},[onMouseOut]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseOver&&(null!==mouseoverListener&&google.maps.event.removeListener(mouseoverListener),setMouseoverListener(google.maps.event.addListener(instance,"mouseover",onMouseOver)))},[onMouseOver]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onMouseUp&&(null!==mouseupListener&&google.maps.event.removeListener(mouseupListener),setMouseupListener(google.maps.event.addListener(instance,"mouseup",onMouseUp)))},[onMouseUp]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onRightClick&&(null!==rightclickListener&&google.maps.event.removeListener(rightclickListener),setRightclickListener(google.maps.event.addListener(instance,"rightclick",onRightClick)))},[onRightClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onClick&&(null!==clickListener&&google.maps.event.removeListener(clickListener),setClickListener(google.maps.event.addListener(instance,"click",onClick)))},[onClick]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onAddFeature&&(null!==addFeatureListener&&google.maps.event.removeListener(addFeatureListener),setAddFeatureListener(google.maps.event.addListener(instance,"addfeature",onAddFeature)))},[onAddFeature]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onRemoveFeature&&(null!==removeFeatureListener&&google.maps.event.removeListener(removeFeatureListener),setRemoveFeatureListener(google.maps.event.addListener(instance,"removefeature",onRemoveFeature)))},[onRemoveFeature]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onRemoveProperty&&(null!==removePropertyListener&&google.maps.event.removeListener(removePropertyListener),setRemovePropertyListener(google.maps.event.addListener(instance,"removeproperty",onRemoveProperty)))},[onRemoveProperty]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onSetGeometry&&(null!==setGeometryListener&&google.maps.event.removeListener(setGeometryListener),setSetGeometryListener(google.maps.event.addListener(instance,"setgeometry",onSetGeometry)))},[onSetGeometry]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{instance&&onSetProperty&&(null!==setPropertyListener&&google.maps.event.removeListener(setPropertyListener),setSetPropertyListener(google.maps.event.addListener(instance,"setproperty",onSetProperty)))},[onSetProperty]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{if(null!==map){let data=new google.maps.Data(Object.assign(Object.assign({},options||{}),{map}));onDblClick&&setDblclickListener(google.maps.event.addListener(data,"dblclick",onDblClick)),onMouseDown&&setMousedownListener(google.maps.event.addListener(data,"mousedown",onMouseDown)),onMouseMove&&setMousemoveListener(google.maps.event.addListener(data,"mousemove",onMouseMove)),onMouseOut&&setMouseoutListener(google.maps.event.addListener(data,"mouseout",onMouseOut)),onMouseOver&&setMouseoverListener(google.maps.event.addListener(data,"mouseover",onMouseOver)),onMouseUp&&setMouseupListener(google.maps.event.addListener(data,"mouseup",onMouseUp)),onRightClick&&setRightclickListener(google.maps.event.addListener(data,"rightclick",onRightClick)),onClick&&setClickListener(google.maps.event.addListener(data,"click",onClick)),onAddFeature&&setAddFeatureListener(google.maps.event.addListener(data,"addfeature",onAddFeature)),onRemoveFeature&&setRemoveFeatureListener(google.maps.event.addListener(data,"removefeature",onRemoveFeature)),onRemoveProperty&&setRemovePropertyListener(google.maps.event.addListener(data,"removeproperty",onRemoveProperty)),onSetGeometry&&setSetGeometryListener(google.maps.event.addListener(data,"setgeometry",onSetGeometry)),onSetProperty&&setSetPropertyListener(google.maps.event.addListener(data,"setproperty",onSetProperty)),setInstance(data),onLoad&&onLoad(data)}return()=>{instance&&(null!==dblclickListener&&google.maps.event.removeListener(dblclickListener),null!==mousedownListener&&google.maps.event.removeListener(mousedownListener),null!==mousemoveListener&&google.maps.event.removeListener(mousemoveListener),null!==mouseoutListener&&google.maps.event.removeListener(mouseoutListener),null!==mouseoverListener&&google.maps.event.removeListener(mouseoverListener),null!==mouseupListener&&google.maps.event.removeListener(mouseupListener),null!==rightclickListener&&google.maps.event.removeListener(rightclickListener),null!==clickListener&&google.maps.event.removeListener(clickListener),null!==addFeatureListener&&google.maps.event.removeListener(addFeatureListener),null!==removeFeatureListener&&google.maps.event.removeListener(removeFeatureListener),null!==removePropertyListener&&google.maps.event.removeListener(removePropertyListener),null!==setGeometryListener&&google.maps.event.removeListener(setGeometryListener),null!==setPropertyListener&&google.maps.event.removeListener(setPropertyListener),onUnmount&&onUnmount(instance),instance.setMap(null))}},[]),null});class Data extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.registeredEvents=[],this.state={data:null},this.setDataCallback=()=>{null!==this.state.data&&this.props.onLoad&&this.props.onLoad(this.state.data)}}componentDidMount(){if(null!==this.context){let data=new google.maps.Data(Object.assign(Object.assign({},this.props.options||{}),{map:this.context}));this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$7,eventMap:eventMap$7,prevProps:{},nextProps:this.props,instance:data}),this.setState(()=>({data}),this.setDataCallback)}}componentDidUpdate(prevProps){null!==this.state.data&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$7,eventMap:eventMap$7,prevProps,nextProps:this.props,instance:this.state.data}))}componentWillUnmount(){null!==this.state.data&&(this.props.onUnmount&&this.props.onUnmount(this.state.data),unregisterEvents(this.registeredEvents),this.state.data&&this.state.data.setMap(null))}render(){return null}}Data.contextType=MapContext;let eventMap$6={onClick:"click",onDefaultViewportChanged:"defaultviewport_changed",onStatusChanged:"status_changed"},updaterMap$6={options(instance,options){instance.setOptions(options)},url(instance,url){instance.setUrl(url)},zIndex(instance,zIndex){instance.setZIndex(zIndex)}};class KmlLayer extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.registeredEvents=[],this.state={kmlLayer:null},this.setKmlLayerCallback=()=>{null!==this.state.kmlLayer&&this.props.onLoad&&this.props.onLoad(this.state.kmlLayer)}}componentDidMount(){let kmlLayer=new google.maps.KmlLayer(Object.assign(Object.assign({},this.props.options),{map:this.context}));this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$6,eventMap:eventMap$6,prevProps:{},nextProps:this.props,instance:kmlLayer}),this.setState(function(){return{kmlLayer}},this.setKmlLayerCallback)}componentDidUpdate(prevProps){null!==this.state.kmlLayer&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$6,eventMap:eventMap$6,prevProps,nextProps:this.props,instance:this.state.kmlLayer}))}componentWillUnmount(){null!==this.state.kmlLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.kmlLayer),unregisterEvents(this.registeredEvents),this.state.kmlLayer.setMap(null))}render(){return null}}function getOffsetOverride(containerElement,getPixelPositionOffset){return"function"==typeof getPixelPositionOffset?getPixelPositionOffset(containerElement.offsetWidth,containerElement.offsetHeight):{x:0,y:0}}function convertToLatLngString(latLngLike){if(!latLngLike)return"";let latLng=latLngLike instanceof google.maps.LatLng?latLngLike:new google.maps.LatLng(latLngLike.lat,latLngLike.lng);return latLng+""}function convertToLatLngBoundsString(latLngBoundsLike){if(!latLngBoundsLike)return"";let latLngBounds=latLngBoundsLike instanceof google.maps.LatLngBounds?latLngBoundsLike:new google.maps.LatLngBounds(new google.maps.LatLng(latLngBoundsLike.south,latLngBoundsLike.east),new google.maps.LatLng(latLngBoundsLike.north,latLngBoundsLike.west));return latLngBounds+""}KmlLayer.contextType=MapContext,(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function({position,mapPaneName,zIndex,onLoad,onUnmount,getPixelPositionOffset,children}){let map=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MapContext),container=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{let div=document.createElement("div");return div.style.position="absolute",div},[]),overlay=(0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>(function(container,pane,position,getPixelPositionOffset){class Overlay extends google.maps.OverlayView{constructor(container,pane,position){super(),this.container=container,this.pane=pane,this.position=position}onAdd(){var _a;let pane=null===(_a=this.getPanes())||void 0===_a?void 0:_a[this.pane];null==pane||pane.appendChild(this.container)}draw(){let projection=this.getProjection(),point=projection.fromLatLngToDivPixel(this.position),offset=Object.assign({},this.container?getOffsetOverride(this.container,getPixelPositionOffset):{x:0,y:0});null!==point&&(this.container.style.transform=`translate(${point.x+offset.x}px, ${point.y+offset.y}px)`)}onRemove(){null!==this.container.parentNode&&this.container.parentNode.removeChild(this.container)}}return new Overlay(container,pane,position)})(container,mapPaneName,position,getPixelPositionOffset),[container,mapPaneName,position]);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>(null==onLoad||onLoad(overlay),null==overlay||overlay.setMap(map),()=>{null==onUnmount||onUnmount(overlay),null==overlay||overlay.setMap(null)}),[map,overlay]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{container.style.zIndex=`${zIndex}`},[zIndex,container]),react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal(children,container)});class OverlayView extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(props){super(props),this.state={paneEl:null,containerStyle:{position:"absolute"}},this.updatePane=()=>{let mapPaneName=this.props.mapPaneName,mapPanes=this.overlayView.getPanes();invariant_1(!!mapPaneName,"OverlayView requires props.mapPaneName but got %s",mapPaneName),mapPanes?this.setState({paneEl:mapPanes[mapPaneName]}):this.setState({paneEl:null})},this.onAdd=()=>{var _a,_b;this.updatePane(),null===(_b=(_a=this.props).onLoad)||void 0===_b||_b.call(_a,this.overlayView)},this.onPositionElement=()=>{var bounds,position,type,type1,previousPosition,inst,inst1;let mapCanvasProjection=this.overlayView.getProjection(),offset=Object.assign({x:0,y:0},this.containerRef.current?getOffsetOverride(this.containerRef.current,this.props.getPixelPositionOffset):{}),layoutStyles=(bounds=this.props.bounds,position=this.props.position,void 0!==bounds?function(mapCanvasProjection,offset,bounds){let ne=mapCanvasProjection&&mapCanvasProjection.fromLatLngToDivPixel(bounds.getNorthEast()),sw=mapCanvasProjection&&mapCanvasProjection.fromLatLngToDivPixel(bounds.getSouthWest());return ne&&sw?{left:`${sw.x+offset.x}px`,top:`${ne.y+offset.y}px`,width:`${ne.x-sw.x-offset.x}px`,height:`${sw.y-ne.y-offset.y}px`}:{left:"-9999px",top:"-9999px"}}(mapCanvasProjection,offset,bounds instanceof(type=google.maps.LatLngBounds)?bounds:(inst=bounds,new type(new google.maps.LatLng(inst.ne.lat,inst.ne.lng),new google.maps.LatLng(inst.sw.lat,inst.sw.lng)))):function(mapCanvasProjection,offset,position){let point=mapCanvasProjection&&mapCanvasProjection.fromLatLngToDivPixel(position);if(point){let{x,y}=point;return{left:`${x+offset.x}px`,top:`${y+offset.y}px`}}return{left:"-9999px",top:"-9999px"}}(mapCanvasProjection,offset,position instanceof(type1=google.maps.LatLng)?position:(inst1=position,new type1(inst1.lat,inst1.lng)))),{left,top,width,height}=this.state.containerStyle;previousPosition={left,top,width,height},(layoutStyles.left!==previousPosition.left||layoutStyles.top!==previousPosition.top||layoutStyles.width!==previousPosition.height||layoutStyles.height!==previousPosition.height)&&this.setState({containerStyle:Object.assign(Object.assign({},layoutStyles),{position:"absolute"})})},this.draw=()=>{this.onPositionElement()},this.onRemove=()=>{var _a,_b;this.setState(()=>({paneEl:null})),null===(_b=(_a=this.props).onUnmount)||void 0===_b||_b.call(_a,this.overlayView)},this.containerRef=(0,react__WEBPACK_IMPORTED_MODULE_0__.createRef)();let overlayView=new google.maps.OverlayView;overlayView.onAdd=this.onAdd,overlayView.draw=this.draw,overlayView.onRemove=this.onRemove,this.overlayView=overlayView}componentDidMount(){this.overlayView.setMap(this.context)}componentDidUpdate(prevProps){let prevPositionString=convertToLatLngString(prevProps.position),positionString=convertToLatLngString(this.props.position),prevBoundsString=convertToLatLngBoundsString(prevProps.bounds),boundsString=convertToLatLngBoundsString(this.props.bounds);(prevPositionString!==positionString||prevBoundsString!==boundsString)&&this.overlayView.draw(),prevProps.mapPaneName!==this.props.mapPaneName&&this.updatePane()}componentWillUnmount(){this.overlayView.setMap(null)}render(){let paneEl=this.state.paneEl;return paneEl?react_dom__WEBPACK_IMPORTED_MODULE_1__.createPortal(jsxRuntime.exports.jsx("div",Object.assign({ref:this.containerRef,style:this.state.containerStyle},{children:react__WEBPACK_IMPORTED_MODULE_0__.Children.only(this.props.children)})),paneEl):null}}OverlayView.FLOAT_PANE="floatPane",OverlayView.MAP_PANE="mapPane",OverlayView.MARKER_LAYER="markerLayer",OverlayView.OVERLAY_LAYER="overlayLayer",OverlayView.OVERLAY_MOUSE_TARGET="overlayMouseTarget",OverlayView.contextType=MapContext;let eventMap$5={onDblClick:"dblclick",onClick:"click"},updaterMap$5={opacity(instance,opacity){instance.setOpacity(opacity)}};class GroundOverlay extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.registeredEvents=[],this.state={groundOverlay:null},this.setGroundOverlayCallback=()=>{null!==this.state.groundOverlay&&this.props.onLoad&&this.props.onLoad(this.state.groundOverlay)}}componentDidMount(){invariant_1(!!this.props.url||!!this.props.bounds,"For GroundOverlay, url and bounds are passed in to constructor and are immutable after instantiated. This is the behavior of Google Maps JavaScript API v3 ( See https://developers.google.com/maps/documentation/javascript/reference#GroundOverlay) Hence, use the corresponding two props provided by `react-google-maps-api`, url and bounds. In some cases, you'll need the GroundOverlay component to reflect the changes of url and bounds. You can leverage the React's key property to remount the component. Typically, just `key={url}` would serve your need. See https://github.com/tomchentw/react-google-maps/issues/655");let groundOverlay=new google.maps.GroundOverlay(this.props.url,this.props.bounds,Object.assign(Object.assign({},this.props.options),{map:this.context}));this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$5,eventMap:eventMap$5,prevProps:{},nextProps:this.props,instance:groundOverlay}),this.setState(function(){return{groundOverlay}},this.setGroundOverlayCallback)}componentDidUpdate(prevProps){null!==this.state.groundOverlay&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$5,eventMap:eventMap$5,prevProps,nextProps:this.props,instance:this.state.groundOverlay}))}componentWillUnmount(){this.state.groundOverlay&&(this.props.onUnmount&&this.props.onUnmount(this.state.groundOverlay),this.state.groundOverlay.setMap(null))}render(){return null}}GroundOverlay.defaultProps={onLoad:function(){}},GroundOverlay.contextType=MapContext;let eventMap$4={},updaterMap$4={data(instance,data){instance.setData(data)},map(instance,map){instance.setMap(map)},options(instance,options){instance.setOptions(options)}};(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(function({data,onLoad,onUnmount,options}){let map=(0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(MapContext),[instance,setInstance]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);return(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{google.maps.visualization||invariant_1(!!google.maps.visualization,'Did you include prop libraries={["visualization"]} in useJsApiScript? %s',google.maps.visualization)},[]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{invariant_1(!!data,"data property is required in HeatmapLayer %s",data)},[data]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{null!==instance&&instance.setMap(map)},[map]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{options&&null!==instance&&instance.setOptions(options)},[instance,options]),(0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{let heatmapLayer=new google.maps.visualization.HeatmapLayer(Object.assign(Object.assign({},options||{}),{data,map}));return setInstance(heatmapLayer),onLoad&&onLoad(heatmapLayer),()=>{null!==instance&&(onUnmount&&onUnmount(instance),instance.setMap(null))}},[]),null});class HeatmapLayer extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.registeredEvents=[],this.state={heatmapLayer:null},this.setHeatmapLayerCallback=()=>{null!==this.state.heatmapLayer&&this.props.onLoad&&this.props.onLoad(this.state.heatmapLayer)}}componentDidMount(){invariant_1(!!google.maps.visualization,'Did you include prop libraries={["visualization"]} to <LoadScript />? %s',google.maps.visualization),invariant_1(!!this.props.data,"data property is required in HeatmapLayer %s",this.props.data);let heatmapLayer=new google.maps.visualization.HeatmapLayer(Object.assign(Object.assign({},this.props.options||{}),{data:this.props.data,map:this.context}));this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$4,eventMap:eventMap$4,prevProps:{},nextProps:this.props,instance:heatmapLayer}),this.setState(function(){return{heatmapLayer}},this.setHeatmapLayerCallback)}componentDidUpdate(prevProps){unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$4,eventMap:eventMap$4,prevProps,nextProps:this.props,instance:this.state.heatmapLayer})}componentWillUnmount(){null!==this.state.heatmapLayer&&(this.props.onUnmount&&this.props.onUnmount(this.state.heatmapLayer),unregisterEvents(this.registeredEvents),this.state.heatmapLayer.setMap(null))}render(){return null}}HeatmapLayer.contextType=MapContext;let eventMap$3={onCloseClick:"closeclick",onPanoChanged:"pano_changed",onPositionChanged:"position_changed",onPovChanged:"pov_changed",onResize:"resize",onStatusChanged:"status_changed",onVisibleChanged:"visible_changed",onZoomChanged:"zoom_changed"},updaterMap$3={register(instance,provider,options){instance.registerPanoProvider(provider,options)},links(instance,links){instance.setLinks(links)},motionTracking(instance,motionTracking){instance.setMotionTracking(motionTracking)},options(instance,options){instance.setOptions(options)},pano(instance,pano){instance.setPano(pano)},position(instance,position){instance.setPosition(position)},pov(instance,pov){instance.setPov(pov)},visible(instance,visible){instance.setVisible(visible)},zoom(instance,zoom){instance.setZoom(zoom)}};class StreetViewPanorama extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.registeredEvents=[],this.state={streetViewPanorama:null},this.setStreetViewPanoramaCallback=()=>{null!==this.state.streetViewPanorama&&this.props.onLoad&&this.props.onLoad(this.state.streetViewPanorama)}}componentDidMount(){let streetViewPanorama=this.context.getStreetView();this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$3,eventMap:eventMap$3,prevProps:{},nextProps:this.props,instance:streetViewPanorama}),this.setState(()=>({streetViewPanorama}),this.setStreetViewPanoramaCallback)}componentDidUpdate(prevProps){null!==this.state.streetViewPanorama&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$3,eventMap:eventMap$3,prevProps,nextProps:this.props,instance:this.state.streetViewPanorama}))}componentWillUnmount(){null!==this.state.streetViewPanorama&&(this.props.onUnmount&&this.props.onUnmount(this.state.streetViewPanorama),unregisterEvents(this.registeredEvents),this.state.streetViewPanorama.setVisible(!1))}render(){return null}}StreetViewPanorama.contextType=MapContext;class StreetViewService extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.state={streetViewService:null},this.setStreetViewServiceCallback=()=>{null!==this.state.streetViewService&&this.props.onLoad&&this.props.onLoad(this.state.streetViewService)}}componentDidMount(){let streetViewService=new google.maps.StreetViewService;this.setState(function(){return{streetViewService}},this.setStreetViewServiceCallback)}componentWillUnmount(){null!==this.state.streetViewService&&this.props.onUnmount&&this.props.onUnmount(this.state.streetViewService)}render(){return null}}StreetViewService.contextType=MapContext;let eventMap$2={onDirectionsChanged:"directions_changed"},updaterMap$2={directions(instance,directions){instance.setDirections(directions)},map(instance,map){instance.setMap(map)},options(instance,options){instance.setOptions(options)},panel(instance,panel){instance.setPanel(panel)},routeIndex(instance,routeIndex){instance.setRouteIndex(routeIndex)}};class DirectionsRenderer extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.registeredEvents=[],this.state={directionsRenderer:null},this.setDirectionsRendererCallback=()=>{null!==this.state.directionsRenderer&&(this.state.directionsRenderer.setMap(this.context),this.props.onLoad&&this.props.onLoad(this.state.directionsRenderer))}}componentDidMount(){let directionsRenderer=new google.maps.DirectionsRenderer(this.props.options);this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$2,eventMap:eventMap$2,prevProps:{},nextProps:this.props,instance:directionsRenderer}),this.setState(function(){return{directionsRenderer}},this.setDirectionsRendererCallback)}componentDidUpdate(prevProps){null!==this.state.directionsRenderer&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$2,eventMap:eventMap$2,prevProps,nextProps:this.props,instance:this.state.directionsRenderer}))}componentWillUnmount(){null!==this.state.directionsRenderer&&(this.props.onUnmount&&this.props.onUnmount(this.state.directionsRenderer),unregisterEvents(this.registeredEvents),this.state.directionsRenderer&&this.state.directionsRenderer.setMap(null))}render(){return jsxRuntime.exports.jsx(jsxRuntime.exports.Fragment,{})}}DirectionsRenderer.contextType=MapContext;let eventMap$1={onPlacesChanged:"places_changed"},updaterMap$1={bounds(instance,bounds){instance.setBounds(bounds)}};class StandaloneSearchBox extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.registeredEvents=[],this.containerElement=(0,react__WEBPACK_IMPORTED_MODULE_0__.createRef)(),this.state={searchBox:null},this.setSearchBoxCallback=()=>{null!==this.state.searchBox&&this.props.onLoad&&this.props.onLoad(this.state.searchBox)}}componentDidMount(){if(invariant_1(!!google.maps.places,'You need to provide libraries={["places"]} prop to <LoadScript /> component %s',google.maps.places),null!==this.containerElement&&null!==this.containerElement.current){let input=this.containerElement.current.querySelector("input");if(null!==input){let searchBox=new google.maps.places.SearchBox(input,this.props.options);this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$1,eventMap:eventMap$1,prevProps:{},nextProps:this.props,instance:searchBox}),this.setState(function(){return{searchBox}},this.setSearchBoxCallback)}}}componentDidUpdate(prevProps){null!==this.state.searchBox&&(unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap:updaterMap$1,eventMap:eventMap$1,prevProps,nextProps:this.props,instance:this.state.searchBox}))}componentWillUnmount(){null!==this.state.searchBox&&(this.props.onUnmount&&this.props.onUnmount(this.state.searchBox),unregisterEvents(this.registeredEvents))}render(){return jsxRuntime.exports.jsx("div",Object.assign({ref:this.containerElement},{children:react__WEBPACK_IMPORTED_MODULE_0__.Children.only(this.props.children)}))}}StandaloneSearchBox.contextType=MapContext;let eventMap={onPlaceChanged:"place_changed"},updaterMap={bounds(instance,bounds){instance.setBounds(bounds)},restrictions(instance,restrictions){instance.setComponentRestrictions(restrictions)},fields(instance,fields){instance.setFields(fields)},options(instance,options){instance.setOptions(options)},types(instance,types){instance.setTypes(types)}};class Autocomplete extends react__WEBPACK_IMPORTED_MODULE_0__.PureComponent{constructor(){super(...arguments),this.registeredEvents=[],this.containerElement=(0,react__WEBPACK_IMPORTED_MODULE_0__.createRef)(),this.state={autocomplete:null},this.setAutocompleteCallback=()=>{null!==this.state.autocomplete&&this.props.onLoad&&this.props.onLoad(this.state.autocomplete)}}componentDidMount(){invariant_1(!!google.maps.places,'You need to provide libraries={["places"]} prop to <LoadScript /> component %s',google.maps.places);let input=this.containerElement.current.querySelector("input");if(input){let autocomplete=new google.maps.places.Autocomplete(input,this.props.options);this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap,eventMap,prevProps:{},nextProps:this.props,instance:autocomplete}),this.setState(()=>({autocomplete}),this.setAutocompleteCallback)}}componentDidUpdate(prevProps){unregisterEvents(this.registeredEvents),this.registeredEvents=applyUpdatersToPropsAndRegisterEvents({updaterMap,eventMap,prevProps,nextProps:this.props,instance:this.state.autocomplete})}componentWillUnmount(){null!==this.state.autocomplete&&unregisterEvents(this.registeredEvents)}render(){return jsxRuntime.exports.jsx("div",Object.assign({ref:this.containerElement,className:this.props.className},{children:react__WEBPACK_IMPORTED_MODULE_0__.Children.only(this.props.children)}))}}Autocomplete.defaultProps={className:""},Autocomplete.contextType=MapContext}}]);